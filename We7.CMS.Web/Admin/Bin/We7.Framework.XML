<?xml version="1.0"?>
<doc>
    <assembly>
        <name>We7.Framework</name>
    </assembly>
    <members>
        <member name="M:We7.Framework.Scheduler.Queue(System.Threading.WaitCallback,System.Object)">
            <summary>
            执行队列
            </summary>
            <param name="callBack"></param>
            <param name="state"></param>
        </member>
        <member name="M:We7.Framework.Scheduler.Queue(System.Threading.WaitCallback)">
            <summary>
            执行队列
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="M:We7.Framework.Scheduler.Paiallel(System.Threading.WaitCallback,System.Object)">
            <summary>
            执行并行任务
            </summary>
            <param name="callBack"></param>
            <param name="state"></param>
        </member>
        <member name="M:We7.Framework.Scheduler.Paiallel(System.Threading.WaitCallback)">
            <summary>
            执行并行任务
            </summary>
            <param name="callBack"></param>
        </member>
        <member name="T:We7.Framework.EventHelper">
            <summary>
            事件日志处理类
            </summary>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSqlTran(System.Collections.ArrayList)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSqlInsertImg(System.String,System.Byte[])">
            <summary>
            向数据库里插入图像格式的字段(和上面情况类似的另一种实例)
            </summary>
            <param name="strSQL">SQL语句</param>
            <param name="fs">图像字节,数据库的字段类型为image的情况</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSql(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteSqlTran(System.Collections.Hashtable)">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的OleDbParameter[]）</param>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.GetSingle(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.ExecuteReader(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回OleDbDataReader
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>OleDbDataReader</returns>
        </member>
        <member name="M:We7.Framework.DbHelperOleDb.Query(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:We7.Framework.VersioncComparison">
            <summary>
            提供对We7.CMS的版本比较的公共类
                wjz 2010年8月10日
                默认要比当前的版本小 return false
            </summary>
        </member>
        <member name="M:We7.Framework.VersioncComparison.Compare(System.String,System.String,System.Boolean)">
            <summary>
            比较版本大小
            </summary>
            <param name="verA">比较的版本号</param>
            <param name="verB">比较的依据版本号</param>
            <param name="agnoreCase">是不是忽略大小写</param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.ECompareRelut">
            <summary>
            判断大小枚举
            </summary>
        </member>
        <member name="F:We7.Framework.ECompareRelut.Greater">
            <summary>
            比源数据大
            </summary>
        </member>
        <member name="F:We7.Framework.ECompareRelut.Equal">
            <summary>
            俩个数据相等
            </summary>
        </member>
        <member name="F:We7.Framework.ECompareRelut.Less">
            <summary>
            比元数据小
            </summary>
        </member>
        <member name="T:We7.Framework.Util.GetAcronymString">
            <summary>
            字符串拼音生成类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.GetAcronymString.Convert(System.String)">
              <summary>   
              获取一串汉字的拼音声母   
              </summary>   
              <param name="chinese">Unicode格式的汉字字符串</param>   
              <returns>拼音声母字符串</returns>   
              <example>   
              “西部动力”转换为“xbdl”   
              </example>   
        </member>
        <member name="M:We7.Framework.Util.GetAcronymString.Convert(System.Char)">
              <summary>   
              获取一个汉字的拼音声母   
              </summary>   
              <param   name="chinese">Unicode格式的一个汉字</param>   
              <returns>汉字的声母</returns>   
        </member>
        <member name="T:We7.Framework.Cache.DefaultCacheStrategy">
            <summary>
            默认缓存管理类
            </summary>
        </member>
        <member name="T:We7.Framework.Cache.ICacheStrategy">
            <summary>
            公共缓存策略接口
            </summary>
        </member>
        <member name="M:We7.Framework.Cache.ICacheStrategy.AddObject(System.String,System.Object)">
            <summary>
            添加指定ID的对象
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
        </member>
        <member name="M:We7.Framework.Cache.ICacheStrategy.AddObject(System.String,System.Object,System.Int32)">
            <summary>
            添加指定ID的对象
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
            <param name="timeOut">过期时间</param>
        </member>
        <!-- 对于成员“M:We7.Framework.Cache.ICacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.String[])”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:We7.Framework.Cache.ICacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.Web.Caching.CacheItemRemovedCallback,System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:We7.Framework.Cache.ICacheStrategy.AddObjectWithDepend(System.String,System.Object,System.String[])">
            <summary>
            添加指定ID的对象(关联指定键值组)
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
            <param name="dependKey"></param>
        </member>
        <member name="M:We7.Framework.Cache.ICacheStrategy.RemoveObject(System.String)">
            <summary>
            移除指定ID的对象
            </summary>
            <param name="objId"></param>
        </member>
        <member name="M:We7.Framework.Cache.ICacheStrategy.RetrieveObject(System.String)">
            <summary>
            返回指定ID的对象
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.ICacheStrategy.RetrieveObject``1(System.String)">
            <summary>
            返回指定ID的对象
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Cache.ICacheStrategy.TimeOut">
            <summary>
            到期时间,单位：秒
            </summary>
        </member>
        <member name="F:We7.Framework.Cache.DefaultCacheStrategy._timeOut">
            <summary>
            默认缓存存活期为3600秒(1小时)
            </summary>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.AddObject(System.String,System.Object)">
            <summary>
            加入当前对象到缓存中
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.AddObjectWith(System.String,System.Object)">
            <summary>
            加入当前对象到缓存中
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.String[])">
            <summary>
            加入当前对象到缓存中,并对相关文件建立依赖
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
            <param name="files">监视的路径文件</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.Web.Caching.CacheItemRemovedCallback,System.String[])">
            <summary>
            加入当前对象到缓存中,并对相关文件建立依赖
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
            <param name="files">监视的路径文件</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.AddObjectWithDepend(System.String,System.Object,System.String[])">
            <summary>
            加入当前对象到缓存中,并使用依赖键
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
            <param name="dependKey">依赖关联的键值</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.onRemove(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            建立回调委托的一个实例
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="reason"></param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.RemoveObject(System.String)">
            <summary>
            删除缓存对象
            </summary>
            <param name="objId">对象的关键字</param>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.RetrieveObject(System.String)">
            <summary>
            返回一个指定的对象
            </summary>
            <param name="objId">对象的关键字</param>
            <returns>对象</returns>
        </member>
        <member name="M:We7.Framework.Cache.DefaultCacheStrategy.RetrieveObject``1(System.String)">
            <summary>
            返回指定ID的对象
            </summary>
            <param name="objId"></param>
            <typeparam name="T">返回数据的类型</typeparam>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Cache.DefaultCacheStrategy.TimeOut">
            <summary>
            设置到期相对时间[单位: 秒] 
            </summary>
        </member>
        <member name="T:We7.Framework.AppCtx">
            <summary>
            系统上下文
            </summary>
        </member>
        <member name="F:We7.Framework.AppCtx.ModelConfigPath">
            <summary>
            模型配置文件路径
            </summary>
        </member>
        <member name="P:We7.Framework.AppCtx.Cache">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:We7.Framework.AppCtx.IsDemoSite">
            <summary>
            是否是演示站点
            </summary>
        </member>
        <member name="T:We7.Framework.Util.MobileHelper">
            <summary>
            手机短信发送助手
            </summary>
        </member>
        <member name="M:We7.Framework.Util.MobileHelper.SendMessage(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="mobiles">手机号码</param>
            <param name="content">内容</param>
            <returns>发送结果：0-成功；其他-错误信息</returns>
        </member>
        <member name="P:We7.Framework.Util.MobileHelper.SMSConfig.Assembly">
            <summary>
            dll文件名
            </summary>
        </member>
        <member name="P:We7.Framework.Util.MobileHelper.SMSConfig.ClassName">
            <summary>
            类名（完整命名空间）
            </summary>
        </member>
        <member name="P:We7.Framework.Util.MobileHelper.SMSConfig.ConfigString">
            <summary>
            配置字符串
            </summary>
        </member>
        <member name="P:We7.Framework.Util.MobileHelper.SMSConfig.TheClass">
            <summary>
            已创建类实例
            </summary>
        </member>
        <member name="T:We7.Framework.Util.ISendSMS">
            <summary>
            短信网关接口定义，具体短信网关实现程序继承此接口进行方法实现
            </summary>
        </member>
        <member name="M:We7.Framework.Util.ISendSMS.Send(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="phones">电话号码，多个用英文逗号,隔开</param>
            <param name="content">内容</param>
            <returns>发送结果：0-成功；其他-错误信息</returns>
        </member>
        <member name="P:We7.Framework.Util.ISendSMS.Config">
            <summary>
            赋值配置参数，解析参数字符串，如sn=SDK-BZK-010-00001;pwd=705706;sign=[短客网]
            每个网关都不一样，请自行解析
            </summary>
        </member>
        <member name="T:We7.Framework.Util.BaseSendSMS">
            <summary>
            发送短信基础类（抽象类）
            </summary>
        </member>
        <member name="M:We7.Framework.Util.BaseSendSMS.Send(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="phones">电话号码，多个用英文逗号,隔开</param>
            <param name="content">内容</param>
            <returns>发送结果：0-成功；其他-错误信息</returns>
        </member>
        <member name="P:We7.Framework.Util.BaseSendSMS.Config">
            <summary>
            赋值配置参数，解析参数字符串，如sn=SDK-BZK-010-00001;pwd=705706;sign=[短客网]
            每个网关都不一样，请自行解析
            </summary>
        </member>
        <member name="T:We7.Framework.IHelper">
            <summary>
            助手类接口
            </summary>
        </member>
        <member name="T:We7.Framework.Config.GeneralConfigFileManager">
            <summary>
            网站基本设置管理类
            </summary>
        </member>
        <member name="T:We7.Framework.Config.DefaultConfigFileManager">
            <summary>
            文件配置管理基类
            </summary>
        </member>
        <member name="F:We7.Framework.Config.DefaultConfigFileManager.m_configfilepath">
            <summary>
            文件所在路径变量
            </summary>
        </member>
        <member name="F:We7.Framework.Config.DefaultConfigFileManager.m_configinfo">
            <summary>
            临时配置对象变量
            </summary>
        </member>
        <member name="F:We7.Framework.Config.DefaultConfigFileManager.m_lockHelper">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:We7.Framework.Config.DefaultConfigFileManager.LoadConfig(System.DateTime@,System.String,We7.Framework.Config.IConfigInfo)">
            <summary>
            加载(反序列化)指定对象类型的配置对象
            </summary>
            <param name="fileoldchange">文件加载时间</param>
            <param name="configFilePath">配置文件所在路径</param>
            <param name="configinfo">相应的变量 注:该参数主要用于设置m_configinfo变量 和 获取类型.GetType()</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.DefaultConfigFileManager.LoadConfig(System.DateTime@,System.String,We7.Framework.Config.IConfigInfo,System.Boolean)">
            <summary>
            加载(反序列化)指定对象类型的配置对象
            </summary>
            <param name="fileoldchange">文件加载时间</param>
            <param name="configFilePath">配置文件所在路径(包括文件名)</param>
            <param name="configinfo">相应的变量 注:该参数主要用于设置m_configinfo变量 和 获取类型.GetType()</param>
            <param name="checkTime">是否检查并更新传递进来的"文件加载时间"变量</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.DefaultConfigFileManager.DeserializeInfo(System.String,System.Type)">
            <summary>
            反序列化指定的类
            </summary>
            <param name="configfilepath">config 文件的路径</param>
            <param name="configtype">相应的类型</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.DefaultConfigFileManager.SaveConfig">
            <summary>
            保存配置实例(虚方法需继承)
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.DefaultConfigFileManager.SaveConfig(System.String,We7.Framework.Config.IConfigInfo)">
            <summary>
            保存(序列化)指定路径下的配置文件
            </summary>
            <param name="configFilePath">指定的配置文件所在的路径(包括文件名)</param>
            <param name="configinfo">被保存(序列化)的对象</param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Config.DefaultConfigFileManager.ConfigFilePath">
            <summary>
            文件所在路径
            </summary>
        </member>
        <member name="P:We7.Framework.Config.DefaultConfigFileManager.ConfigInfo">
            <summary>
            临时配置对象
            </summary>
        </member>
        <member name="F:We7.Framework.Config.GeneralConfigFileManager.m_lockHelper">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="F:We7.Framework.Config.GeneralConfigFileManager.m_fileoldchange">
            <summary>
            文件修改时间
            </summary>
        </member>
        <member name="F:We7.Framework.Config.GeneralConfigFileManager.filename">
            <summary>
            配置文件所在路径
            </summary>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigFileManager.LoadRealConfig">
            <summary>
            加载真正有效的配置类
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigFileManager.LoadConfig">
            <summary>
            返回配置类实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigFileManager.SaveConfig">
            <summary>
            保存配置类实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigFileManager.ConfigInfo">
            <summary>
            当前配置类的实例
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigFileManager.ConfigFilePath">
            <summary>
            获取配置文件所在路径
            </summary>
        </member>
        <member name="T:We7.Framework.EventLogHelper">
            <summary>
            We7各服务错误日志
            update{
            date:"2011-9-29",
            author:"Brian.Gou"
            }
            
            </summary>
        </member>
        <member name="M:We7.Framework.EventLogHelper.WriteToLog(System.String,System.Exception,System.Diagnostics.EventLogEntryType)">
            <summary>
            写事件日志
            </summary>
            <param name="source">日志发生源（工程名—类名—方法名）</param>
            <param name="ex"></param>
            <param name="logType"></param>
        </member>
        <member name="M:We7.Framework.EventLogHelper.WriteToLog(System.String,System.Exception)">
            <summary>
            写事件日志
            </summary>
            <param name="source">日志发生源（工程名—类名—方法名）</param>
            <param name="ex"></param>
        </member>
        <member name="M:We7.Framework.EventLogHelper.SaveLogToFile(System.String,System.String)">
            <summary>
            保存到文件日志中
            </summary>
            <param name="source"></param>
            <param name="message"></param>
        </member>
        <member name="M:We7.Framework.EventLogHelper.SaveLog(System.String,System.String)">
            <summary>
            保存日志
            </summary>
            <param name="input">输入内容</param>
            <param name="logFileName">文件名称</param>
        </member>
        <member name="T:We7.Framework.Zip.ZipUtils">
            <summary>
            ZIP压缩基础操作类
            </summary>
        </member>
        <member name="T:We7.Framework.Util.FileHelper">
            <summary>
            文件操作公共类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.Exists(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.WriteFile(System.String,System.String,System.IO.FileMode)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件完全限定路径</param>
            <param name="content">需要写入的内容</param>
            /// <param name="fileModel">如果文件存在则设置添加模式(默认为追加)</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.WriteFileWithEncoding(System.String,System.String,System.IO.FileMode,System.Text.Encoding)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件完全限定路径</param>
            <param name="content">需要写入的内容</param>
            <param name="fileModel">如果文件存在则设置添加模式(默认为追加)</param>
            <param name="encoding">编码</param>
            <returns>成功：空；失败：错误消息</returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.WriteFile(System.String,System.String)">
            <summary>
             写文件
            </summary>
            <param name="filePath">文件完全限定路径</param>
            <param name="content">需要写入的内容</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.WriteFileEx(System.String,System.String,System.Boolean)">
            <summary>
            向指定文件中添加内容。这个是扩展以前的方法，以UTF8的行式写内容，不会出现乱码。
            </summary>
            <param name="filePath"></param>
            <param name="content"></param>
            <param name="append"></param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.ReadFile(System.String,System.Text.Encoding)">
            <summary>
            读取文件
            </summary>
            <param name="filePath">文件默认完路径名</param>
            <param name="encoding">读取文件编码方式（默认为utf-8）</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.ReadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath">文件默认完路径名</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.ReadFileWithLine(System.String,System.Text.Encoding)">
            <summary>
            读取文本文件（带换行符,能读取被锁住的文件）
            </summary>
            <param name="filePath"></param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.Copy(System.String,System.String,System.Boolean)">
            <summary>
            复制文件
            </summary>
            <param name="sourceFileName">源文件完全路径</param>
            <param name="destFileName">新文件路径</param>
            <param name="overwrite">是否覆盖(默认true)</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.Copy(System.String,System.String)">
            <summary>
            复制文件
            </summary>
            <param name="sourceFileName">源文件完全路径</param>
            <param name="destFileName">新文件路径</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            复制文件夹
            </summary>
            <param name="SourcePath">原始文件夹路径</param>
            <param name="DestinationPath">新文件夹路径</param>
            <param name="overwriteexisting">是否覆盖(默认true)</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.CopyDirectory(System.String,System.String)">
            <summary>
            复制文件夹
            </summary>
            <param name="SourcePath">原始文件夹路径</param>
            <param name="DestinationPath">新文件夹路径</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.CreateDirectory(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="fullFilePath">文件完全限定路径</param>
        </member>
        <member name="M:We7.Framework.Util.FileHelper.GetFileLastChange(System.String)">
            <summary>
            获取文件最近修改时间
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.SNGenerator.ToSN(System.Object)">
            <summary>
            根据数据对象创建SN
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.SNGenerator.FromSN``1(System.String)">
            <summary>
            从SN中转化出SN对象
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.PluginSN">
            <summary>
            插件序列号
            </summary>
        </member>
        <member name="T:We7.Framework.TemplateEnginer.NVelocityHelper">
            <summary>
             NVelocity帮助类
            </summary>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.#ctor(System.String)">
            <summary>
            模板文件夹路径
            </summary>
            <param name="templatDir"></param>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.Init(System.String)">
            <summary>
            初始化NVelocity
            </summary>
            <param name="templatDir">模板文件夹路径</param>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.Put(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="key">标识符</param>
            <param name="value">值</param>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.Save(System.String,System.String)">
            <summary>
            保存生成的文件
            </summary>
            <param name="inputFileName">模板名称</param>
            <param name="outPutFilePath">生成文件完全限定名(包括路径)</param>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.GetTemplate(System.String,System.String)">
            <summary>
            缓存模板对象
            </summary>
            <param name="folder"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.TemplateEnginer.NVelocityHelper.GetFormatString(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到模板字符串
            </summary>
            <param name="folder"></param>
            <param name="fileName"></param>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.TemplateEnginer.NVelocityHelper.TemplateFolder">
            <summary>
            模板文件夹路径
            </summary>
        </member>
        <member name="T:We7.Framework.Zip.ZipClass">
            <summary>
            zip压缩业务处理包括模板组等
            </summary>
        </member>
        <member name="M:We7.Framework.Zip.ZipClass.ZipPathToFile(System.String[])">
            <summary>
            通用压缩目录方法
            </summary>
            <param name="args">分别放：源文件夹路径；目标文件路径；</param>
        </member>
        <member name="T:We7.Framework.Util.MailHelper">
            <summary>
            邮件发送助手类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.MailHelper.Send(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="to"></param>
            <param name="from"></param>
            <param name="subject"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.MailHelper.ReceiveMail(System.String,System.String,System.String,System.Boolean)">
            <summary>
            接受邮件，处理所有正确存在邮件
            </summary>
        </member>
        <member name="M:We7.Framework.Util.MailHelper.ReceiveMail(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            接受邮件，处理所有正确存在邮件
            </summary>
        </member>
        <member name="M:We7.Framework.Util.MailHelper.SendMailMessageToXml(System.Net.Mail.MailMessage)">
            <summary>
            未能正确发送的邮件将以XML形式转存至/_Data/SendEmail/目录下
            </summary>
            <param name="mailMessage"></param>
        </member>
        <member name="P:We7.Framework.Util.MailHelper.PopServer">
            <summary>
            收邮件服务
            </summary>
        </member>
        <member name="T:We7.Framework.Util.MailMessageTemplate">
            <summary>
            邮件消息模板类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.MailMessageTemplate.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="templateFile"></param>
            <param name="itemName"></param>
        </member>
        <member name="F:We7.Framework.Util.JavascriptHelper.JqueryPath">
            <summary>
            Jquery文件的路径
            </summary>
        </member>
        <member name="M:We7.Framework.Util.JavascriptHelper.RegisterJquery">
            <summary>
            注册Jquery
            </summary>
        </member>
        <member name="M:We7.Framework.Util.JavascriptHelper.RegisterForm">
            <summary>
            为当前页注册form控件
            </summary>
        </member>
        <member name="M:We7.Framework.Util.JavascriptHelper.GetBody">
            <summary>
            取得Body
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.JavascriptHelper.GetBody(System.Web.UI.Control)">
            <summary>
            取得Body
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Util.JavascriptHelper.Page">
            <summary>
            当正在访问的页面
            </summary>
        </member>
        <member name="P:We7.Framework.Util.JavascriptHelper.ClientScript">
            <summary>
            客户端脚本管理
            </summary>
        </member>
        <member name="T:We7.Framework.HelperFactory">
            <summary>
            Helper助手抽象工厂类
            </summary>
        </member>
        <member name="M:We7.Framework.HelperFactory.#ctor">
            <summary>
            工厂构造
            </summary>
        </member>
        <member name="M:We7.Framework.HelperFactory.Initialize">
            <summary>
            初始化：加载dll中实体对象，对象字典清空
            </summary>
        </member>
        <member name="M:We7.Framework.HelperFactory.GetHelper``1">
            <summary>
            取得具体助手类的可用实例
            </summary>
            <typeparam name="T">类名</typeparam>
            <returns>可用对象</returns>
        </member>
        <member name="P:We7.Framework.HelperFactory.Instance">
            <summary>
            获取业务助手工厂实例
            </summary>
        </member>
        <member name="P:We7.Framework.HelperFactory.Assistant">
            <summary>
            持久层对象
            </summary>
        </member>
        <member name="T:We7.QueryEntity">
            <summary>
            摘要：
            查询参数模型类。主要提供有条件查询的参数值传递的模型
            </summary>
        </member>
        <member name="F:We7.QueryEntity.m_modelName">
            <summary>
            查询的数据模型名称
            </summary>
        </member>
        <member name="F:We7.QueryEntity.queryParams">
            <summary>
            查询参数集合
            </summary>
        </member>
        <member name="F:We7.QueryEntity.m_orders">
            <summary>
            查询排序字段实体类数组
            </summary>
        </member>
        <member name="P:We7.QueryEntity.ModelName">
            <summary>
            获取或者设置查询的数据模型名称
            </summary>
        </member>
        <member name="P:We7.QueryEntity.QueryParams">
            <summary>
            查询参数模型实例。提供查询字段名称。具体值。查询的条件。值类型等集合
            </summary>
        </member>
        <member name="P:We7.QueryEntity.Orders">
            <summary>
            获取或设置排序字段实体数组
            </summary>
        </member>
        <member name="T:We7.QueryParam">
            <summary>
            摘要：
            参数模型类。提供查询参数的模型。
            </summary>
        </member>
        <member name="F:We7.QueryParam.m_criteriaType">
            <summary>
            查询运算符 枚举类型
            </summary>
        </member>
        <member name="F:We7.QueryParam.m_columnKey">
            <summary>
            查询数据列名称
            </summary>
        </member>
        <member name="F:We7.QueryParam.m_columnValue">
            <summary>
            查询数据列值
            </summary>
        </member>
        <member name="P:We7.QueryParam.CriteriaType">
            <summary>
            获取或设置查询运算符
            枚举类型
            </summary>
        </member>
        <member name="P:We7.QueryParam.ColumnKey">
            <summary>
            获取或设置查询数据列键名称
            </summary>
        </member>
        <member name="P:We7.QueryParam.ColumnValue">
            <summary>
            获取或设置查询数据列值
            </summary>
        </member>
        <member name="T:We7.Framework.Common.PassWordEventArgs">
            <summary>
            事件参数。提供带参数的实体
            </summary>
        </member>
        <member name="M:We7.Framework.Common.PassWordEventArgs.#ctor(System.String)">
            <summary>
            传递参数构造
            </summary>
            <param name="password"></param>
        </member>
        <member name="F:We7.Framework.Common.PassWordEventArgs.repassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:We7.Framework.Common.PassWordEventArgs.Repassword">
            <summary>
            设置或者得到传递的参数
            </summary>
        </member>
        <member name="T:We7.Framework.Util.We7Request">
            <summary>
            Request操作类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Request.IsPost">
            <summary>
            判断当前页面是否接收到了Post请求
            </summary>
            <returns>是否接收到了Post请求</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.IsGet">
            <summary>
            判断当前页面是否接收到了Get请求
            </summary>
            <returns>是否接收到了Get请求</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetServerString(System.String)">
            <summary>
            返回指定的服务器变量信息
            </summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetUrlReferrer">
            <summary>
            返回上一个页面的地址
            </summary>
            <returns>上一个页面的地址</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetCurrentFullHost">
            <summary>
            得到当前完整主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetHost">
            <summary>
            得到主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetRawUrl">
            <summary>
            获取当前请求的原始 URL(URL 中域信息之后的部分,包括查询字符串(如果存在))
            </summary>
            <returns>原始 URL</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.IsBrowserGet">
            <summary>
            判断当前访问是否来自浏览器软件
            </summary>
            <returns>当前访问是否来自浏览器软件</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.IsSearchEnginesGet">
            <summary>
            判断是否来自搜索引擎链接
            </summary>
            <returns>是否来自搜索引擎链接</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetUrl">
            <summary>
            获得当前完整Url地址
            </summary>
            <returns>当前完整Url地址</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetQueryString(System.String)">
            <summary>
            获得指定Url参数的值
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetQueryString(System.String,System.Boolean)">
            <summary>
            获得指定Url参数的值
            </summary> 
            <param name="strName">Url参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetPageName">
            <summary>
            获得当前页面的名称
            </summary>
            <returns>当前页面的名称</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetParamCount">
            <summary>
            返回表单或Url参数的总个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetFormString(System.String)">
            <summary>
            获得指定表单参数的值
            </summary>
            <param name="strName">表单参数</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetFormString(System.String,System.Boolean)">
            <summary>
            获得指定表单参数的值
            </summary>
            <param name="strName">表单参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetString(System.String)">
            <summary>
            获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetString(System.String,System.Boolean)">
            <summary>
            获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <param name="sqlSafeCheck">是否进行SQL安全检查</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetQueryInt(System.String)">
            <summary>
            获得指定Url参数的int类型值
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetQueryInt(System.String,System.Int32)">
            <summary>
            获得指定Url参数的int类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetFormInt(System.String,System.Int32)">
            <summary>
            获得指定表单参数的int类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetInt(System.String,System.Int32)">
            <summary>
            获得指定Url或表单参数的int类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetQueryFloat(System.String,System.Single)">
            <summary>
            获得指定Url参数的float类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetFormFloat(System.String,System.Single)">
            <summary>
            获得指定表单参数的float类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的float类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetFloat(System.String,System.Single)">
            <summary>
            获得指定Url或表单参数的float类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Request.SaveRequestFile(System.String)">
            <summary>
            保存用户上传的文件
            </summary>
            <param name="path">保存路径</param>
        </member>
        <member name="M:We7.Framework.Util.Validator.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Validator.IsNumeric(System.String)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Validator.IsDouble(System.Object)">
            <summary>
            是否为Double类型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Validator.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="T:We7.Framework.Util.TypeParse">
            <summary>
            数据类型解析
            </summary>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.IsNumeric(System.String)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.IsDouble(System.Object)">
            <summary>
            是否为Double类型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToBool(System.Object,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToInt(System.String,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToFloat(System.Object,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeParse.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="T:We7.SysException">
            <summary>
            系统错误
            </summary>
        </member>
        <member name="T:We7.Framework.Util.CNspellTranslator">
            <summary>
            获取简体中文拼音首字母类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.CNspellTranslator.GetSpells(System.String)">
            <summary>
            获取简体中文字符串拼音首字母
            </summary>
            <param name="input">简体中文字符串</param>
            <returns>拼音首字母</returns>
        </member>
        <member name="M:We7.Framework.Util.CNspellTranslator.GetSpell(System.String)">
            <summary>
            获取一个简体中文字的拼音首字母
            </summary>
            <param name="cn">一个简体中文字</param>
            <returns>拼音首字母</returns>
        </member>
        <member name="T:We7.Framework.Config.SiteConfigs">
            <summary>
            网站基本设置类
            </summary>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigs.ResetConfig">
            <summary>
            重设配置类实例
            </summary>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigs.GetConfig">
            <summary>
            获取当前站点配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigs.SaveConfig(We7.Framework.Config.SiteConfigInfo)">
            <summary>
            保存配置到config文件
            </summary>
            <param name="configinfo"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigs.Serialiaze(We7.Framework.Config.SiteConfigInfo,System.String)">
            <summary>
            序列化配置信息为XML
            </summary>
            <param name="configinfo">配置信息</param>
            <param name="configFilePath">配置文件完整路径</param>
        </member>
        <member name="T:We7.Framework.Util.Utils">
            <summary>
            工具类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetRegexCompiledOptions">
            <summary>
            得到正则编译参数设置
            </summary>
            <returns>参数设置</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsCharAndNumber(System.String)">
            <summary>
            字符串是否是字符和数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetInArrayID(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetInArrayID(System.String,System.String[])">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>		
        </member>
        <member name="M:We7.Framework.Util.Utils.InArray(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.InArray(System.String,System.String[])">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">字符串数组</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.InArray(System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.InArray(System.String,System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.InArray(System.String,System.String,System.String,System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.RTrim(System.String)">
            <summary>
            删除字符串尾部的回车/换行/空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.TrimEndStringBuilder(System.Text.StringBuilder,System.String)">
            <summary>
            将StringBuilder中的以s结尾的字符串去掉
            </summary>
            <param name="sb"></param>
            <param name="s"></param>
        </member>
        <member name="M:We7.Framework.Util.Utils.ClearBR(System.String)">
            <summary>
            清除给定字符串中的回车及换行符
            </summary>
            <param name="str">要清除的字符串</param>
            <returns>清除后返回的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CutString(System.String,System.Int32)">
            <summary>
            从字符串的指定位置开始截取到字符串结尾的了符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FileExists(System.String)">
            <summary>
            返回文件是否存在
            </summary>
            <param name="filename">文件名</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ResponseFile(System.String,System.String,System.String)">
            <summary>
            以指定的ContentType输出指定文件文件
            </summary>
            <param name="filepath">文件路径</param>
            <param name="filename">输出的文件名</param>
            <param name="filetype">将文件输出时设置的ContentType</param>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsImgFilename(System.String)">
            <summary>
            判断文件名是否为浏览器可以直接显示的图片文件名
            </summary>
            <param name="filename">文件名</param>
            <returns>是否可以直接显示</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IntToStr(System.Int32)">
            <summary>
            int型转换为string型
            </summary>
            <returns>转换后的string类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.MD5(System.String)">
            <summary>
            MD5函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>MD5结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            /// <param name="str">原始字符串</param>
            <returns>SHA256结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ReplaceString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            自定义的替换字符串函数
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetSpacesString(System.Int32)">
            <summary>
            生成指定数量的html空格符号
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsValidEmail(System.String)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsSafeUserInfoString(System.String)">
            <summary>
            检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CleanInput(System.String)">
            <summary>
            清理字符串
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetFilename(System.String)">
            <summary>
            返回URL中结尾的文件名
            </summary>		
        </member>
        <member name="M:We7.Framework.Util.Utils.StrFormat(System.String)">
            <summary>
            替换回车换行符为html换行符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetDate">
            <summary>
            返回标准日期格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetDate(System.String,System.String)">
            <summary>
            返回指定日期格式
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetDateTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetDateTime(System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetDateTimeF">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <!-- 对于成员“M:We7.Framework.Util.Utils.GetStandardDateTime(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:We7.Framework.Util.Utils.GetStandardDateTime(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:We7.Framework.Util.Utils.GetStandardDate(System.String)">
            <summary>
            返回标准时间 yyyy-MM-dd
            </summary>
            <param name="fDate"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsTime(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.mashSQL(System.String)">
            <summary>
            改正sql语句中的转义字符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.ChkSQL(System.String)">
            <summary>
            替换sql语句中的有问题符号
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.transHtml(System.String,System.String)">
            <summary>
            转换为静态html
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.ToSChinese(System.String)">
            <summary>
            转换为简体中文
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.ToTChinese(System.String)">
            <summary>
            转换为繁体中文
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.SplitString(System.String,System.String,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.PadStringArray(System.String[],System.Int32,System.Int32)">
            <summary>
            过滤字符串数组中每个元素为合适的大小
            当长度小于minLength时，忽略掉,-1为不限制最小长度
            当长度大于maxLength时，取其前maxLength位
            如果数组中有null元素，会被忽略掉
            </summary>
            <param name="minLength">单个元素最小长度</param>
            <param name="maxLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.SplitString(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <param name="maxElementLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.SplitString(System.String,System.String,System.Boolean)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.DistinctStringArray(System.String[],System.Int32)">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <param name="maxElementLength">字符串数组中单个元素的最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.DistinctStringArray(System.String[])">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.EncodeHtml(System.String)">
            <summary>
            替换html字符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrFilter(System.String,System.String)">
            <summary>
            进行指定的替换(脏字过滤)
            </summary>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="forumrewrite">当前版块是否使用URL重写</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetPostPageNumbers(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得帖子的伪静态页码显示链接
            </summary>
            <param name="expname"></param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <param name="anchor">锚点</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.HtmlEncode(System.String)">
            <summary>
            返回 HTML 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.HtmlDecode(System.String)">
            <summary>
            返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.UrlEncode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.UrlDecode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FindNoUTF8File(System.String)">
            <summary>
            返回指定目录下的非 UTF8 字符集文件
            </summary>
            <param name="Path">路径</param>
            <returns>文件名的字符串数组</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsUTF8(System.IO.FileStream)">
            <summary>
            判断文件流是否为UTF8字符集
            </summary>
            <param name="sbInputStream">文件流</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FormatBytesStr(System.Int32)">
            <summary>
            格式化字节数字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.SafeInt32(System.Object)">
            <summary>
            将long型数值转换为Int32类型
            </summary>
            <param name="objNum"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrDateDiffSeconds(System.String,System.Int32)">
            <summary>
            返回相差的秒数
            </summary>
            <param name="Time"></param>
            <param name="Sec"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrDateDiffMinutes(System.String,System.Int32)">
            <summary>
            返回相差的分钟数
            </summary>
            <param name="time"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrDateDiffHours(System.String,System.Int32)">
            <summary>
            返回相差的小时数
            </summary>
            <param name="time"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CreateDir(System.String)">
            <summary>
            建立文件夹
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ReplaceStrToScript(System.String)">
            <summary>
            为脚本替换特殊字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.InIPArray(System.String,System.String[])">
            <summary>
            返回指定IP是否在指定的IP数组所限定的范围内, IP数组内的IP地址可以使用*表示该IP段任意, 例如192.168.1.*
            </summary>
            <param name="ip"></param>
            <param name="iparray"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetAssemblyVersion">
            <summary>
            获得Assembly版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetAssemblyProductName">
            <summary>
            获得Assembly产品名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetAssemblyCopyright">
            <summary>
            获得Assembly产品版权
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CreateInstance``1(System.String,System.String)">
            <summary>
            根据程序集名称与类名创建类型实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="typename">类完整名</param>
            <param name="assemblyname">程序集名称</param>
            <returns>创建的实例</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CreateInstance``1(System.String)">
            <summary>
            根据程序集名称与类名创建类型实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="fullname">类完整名</param>
            <returns>创建的实例</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CreateInstance(System.String)">
            <summary>
            根据程序集名称与类名创建类型实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="fullname">类完整名</param>
            <returns>创建的实例</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.MakeSureDirectoryPathExists(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="name">名称</param>
            <returns>创建是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:We7.Framework.Util.Utils.WriteCookie(System.String,System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:We7.Framework.Util.Utils.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="strValue">过期时间(分钟)</param>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetCookie(System.String,System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetTrueForumPath">
            <summary>
            得到论坛的真实路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsDateString(System.String)">
            <summary>
            判断字符串是否是yy-mm-dd字符串
            </summary>
            <param name="str">待判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.RemoveHtml(System.String)">
            <summary>
            移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.RemoveUnsafeHtml(System.String)">
            <summary>
            过滤HTML中的不安全标签
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.RemoveFontTag(System.String)">
            <summary>
            将用户组Title中的font标签去掉
            </summary>
            <param name="title">用户组Title</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetTextFromHTML(System.String)">
            <summary>
            从HTML中获取文本,保留br,p,img
            </summary>
            <param name="HTML"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToInt(System.String,System.Int32)">
            <summary>
            将字符串转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToFloat(System.Object,System.Single)">
            <summary>
            Object型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsInt(System.String)">
            <summary>
            验证是否为正整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ClearLastChar(System.String)">
            <summary>
            删除最后一个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.BackupFile(System.String,System.String,System.Boolean)">
            <summary>
            备份文件
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <param name="overwrite">当目标文件存在时是否覆盖</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.BackupFile(System.String,System.String)">
            <summary>
            备份文件,当目标文件存在时覆盖
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.RestoreFile(System.String,System.String,System.String)">
            <summary>
            恢复文件
            </summary>
            <param name="backupFileName">备份文件名</param>
            <param name="targetFileName">要恢复的文件名</param>
            <param name="backupTargetFileName">要恢复文件再次备份的名称,如果为null,则不再备份恢复文件</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetTemplateCookieName">
            <summary>
            获取记录模板id的cookie名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.SBCCaseToNumberic(System.String)">
            <summary>
            将全角数字转换为数字
            </summary>
            <param name="SBCCase"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ToColor(System.String)">
            <summary>
            将字符串转换为Color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ConvertSimpleFileName(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换长文件名为短文件名
            </summary>
            <param name="filename"></param>
            <param name="repstring"></param>
            <param name="leftnum"></param>
            <param name="rightnum"></param>
            <param name="charnum"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.DataTableToJSON(System.Data.DataTable)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.DataTableToJson(System.Data.DataTable,System.Boolean)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <param name="dispose">数据表转换结束后是否dispose掉</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.StrIsNullOrEmpty(System.String)">
            <summary>
            字段串是否为Null或为""(空)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.IsNumericList(System.String)">
            <summary>
            是否为数值串列表，各数值间用","间隔
            </summary>
            <param name="numList"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.CheckColorValue(System.String)">
            <summary>
            检查颜色值是否为3/6位的合法颜色
            </summary>
            <param name="color">待检查的颜色</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetAjaxPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取ajax形式的分页链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="callback">回调函数</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetSourceTextByUrl(System.String)">
            <summary>
            根据Url获得源文件内容
            </summary>
            <param name="url">合法的Url地址</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ConvertToUnixTimestamp(System.DateTime)">
            <summary>
            转换时间为unix时间戳
            </summary>
            <param name="date">需要传递UTC时间,避免时区误差,例:DataTime.UTCNow</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.JsonCharFilter(System.String)">
            <summary>
            Json特符字符过滤，参见http://www.json.org/
            </summary>
            <param name="sourceStr">要过滤的源字符串</param>
            <returns>返回过滤的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.MergeString(System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>合并到的目的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.MergeString(System.String,System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>并到字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.ClearUBB(System.String)">
            <summary>
            清除UBB标签
            </summary>
            <param name="sDetail">帖子内容</param>
            <returns>帖子内容</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetRootUrl(System.String)">
            <summary>
            获取站点根目录URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetFileExtName(System.String)">
            <summary>
            获取指定文件的扩展名
            </summary>
            <param name="fileName">指定文件名</param>
            <returns>扩展名</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.BuidlPagerParam(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            构建分页数据
            </summary>
            <param name="recordcount">总记录数</param>
            <param name="pagesize">页记录数</param>
            <param name="pageindex">当前页记录</param>
            <param name="startindex">开始记录行号</param>
            <param name="itemscount">当前分页记录数</param>
        </member>
        <member name="M:We7.Framework.Util.Utils.CreateGUID">
            <summary>
            创建新的GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FindControl(System.String,System.Web.UI.Control)">
            <summary>
            按ID在容器中查询控件
            </summary>
            <param name="id"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetHttpWebResponse(System.String,System.String)">
            <summary>
            http POST请求url
            </summary>
            <param name="apiUrl"></param>
            <param name="method_name"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FormartAttachmentUrl(System.Object)">
            <summary>
            格式化附件地址
            </summary>
            <param name="o">数据库中地址</param>
            <returns>格式后地址</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetFirstImg(System.Object,System.String)">
            <summary>
            得到一张图片的地址
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.GetFirstImg(System.Object,System.String,System.String)">
            <summary>
            取得第一张图片，可能带有默认值
            </summary>
            <param name="o">数据字符串</param>
            <param name="type">图片类型</param>
            <param name="defImg">默认图片</param>
            <returns>第一张图片地址</returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FormartImgUrl(We7.Framework.Common.ImageInfo,System.String)">
            <summary>
            格式化图片的地址
            </summary>
            <param IIC="iic"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.FormartImgUrl(We7.Framework.Common.ImageInfo,System.String,System.String)">
            <summary>
            格式化图片的地址
            </summary>
            <param IIC="iic"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.Utils.LostHTML(System.String)">
            <summary>
            过滤字符串中的html代码
            </summary>
            <param name="Str">输入字符串</param>
            <returns>返回过滤之后的字符串</returns>
        </member>
        <member name="P:We7.Framework.Util.Utils.Monthes">
            <summary>
            根据阿拉伯数字返回月份的名称(可更改为某种语言)
            </summary>	
        </member>
        <member name="T:We7.Framework.CacheTime">
            <summary>
            缓存时间
            </summary>
        </member>
        <member name="T:We7.Framework.BaseHelper">
            <summary>
            逻辑层助手处理基类
            </summary>
        </member>
        <member name="M:We7.Framework.BaseHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:We7.Framework.BaseHelper.CacherCache(System.String,System.Web.HttpContext,System.Object,We7.Framework.CacheTime)">
            <summary>
            添加缓存
            </summary>
            <param name="cacheKey">关键字</param>
            <param name="context">Http上下文</param>
            <param name="obj">数据</param>
            <param name="ct">缓存时间</param>
        </member>
        <member name="M:We7.Framework.BaseHelper.Load(System.Type,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseHelper.Save(System.Object,System.String)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:We7.Framework.BaseHelper.CreateOrdersByAll(System.String)">
            <summary>
            依据配对字串格式构造排序项
            </summary>
            <param name="orderString">类似“Updated|Asc,Created|Desc”模式字串</param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.BaseHelper.Name">
            <summary>
            当前Helper名称
            </summary>
        </member>
        <member name="P:We7.Framework.BaseHelper.Description">
            <summary>
            当前Helper作用说明
            </summary>
        </member>
        <member name="P:We7.Framework.BaseHelper.Root">
            <summary>
            当前Helper的程序集所处目录（物理）
            </summary>
        </member>
        <member name="P:We7.Framework.BaseHelper.Assistant">
            <summary>
            当前Helper的数据访问对象
            </summary>
        </member>
        <member name="T:We7.Framework.Config.SiteConfigFileManager">
            <summary>
            网站基本设置管理类
            </summary>
        </member>
        <member name="F:We7.Framework.Config.SiteConfigFileManager.m_lockHelper">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="F:We7.Framework.Config.SiteConfigFileManager.m_fileoldchange">
            <summary>
            文件修改时间
            </summary>
        </member>
        <member name="F:We7.Framework.Config.SiteConfigFileManager.filename">
            <summary>
            配置文件所在路径
            </summary>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigFileManager.LoadRealConfig">
            <summary>
            加载真正有效的配置类
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigFileManager.LoadConfig">
            <summary>
            返回配置类实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.SiteConfigFileManager.SaveConfig">
            <summary>
            保存配置类实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigFileManager.ConfigInfo">
            <summary>
            当前配置类的实例
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigFileManager.ConfigFilePath">
            <summary>
            获取配置文件所在路径
            </summary>
        </member>
        <member name="T:We7.Framework.LogHelper">
            <summary>
            Log Helper
            </summary>
        </member>
        <member name="F:We7.Framework.LogHelper.shareError">
            <summary>
            Shre Error
            </summary>
        </member>
        <member name="F:We7.Framework.LogHelper.sql_plugin_update">
            <summary>
            //IPluginCommand
            </summary>
        </member>
        <member name="F:We7.Framework.LogHelper.sql_update">
            <summary>
            //InstalWebService
            </summary>
        </member>
        <member name="M:We7.Framework.LogHelper.WriteLog(System.Type,System.Exception)">
            <summary>
            输出日志到Log4Net
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:We7.Framework.LogHelper.WriteLog(System.Type,System.String)">
            <summary>
            输出日志到Log4Net
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:We7.Framework.LogHelper.WriteFileLog(System.String,System.String,System.String)">
            <summary>
            为特定用途，写文本文件做日志
                \Log\
            </summary>
            <param name="fileName">xxx.txt</param>
            <param name="strTitle">错误信息</param>
            <param name="strContent">错误提示</param>
        </member>
        <member name="T:We7.Framework.Config.SiteConfigInfo">
            <summary>
            网站基本设置描述类, 加[Serializable]标记为可序列化
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.WDWebUrl">
            <summary>
            站群控制台Web地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SiteGroupEnabled">
            <summary>
            站群功能是否启用
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SiteID">
            <summary>
            网站Webtie的ID号
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SiteName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.CompanyName">
            <summary>
            站点名称，兼容过去，暂时留着
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SiteDescription">
            <summary>
            站点描述
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.RootUrl">
            <summary>
            根地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.WebGroupSericeKey">
            <summary>
            WD服务验证字
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.WebGroupServiceUrl">
            <summary>
            WD服务URL接口地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.InformationServiceUrl">
            <summary>
            ID共享服务器URL地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.AdministratorID">
            <summary>
            相当于产生AccountID
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.AdministratorName">
            <summary>
            默认为Administrator
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.AdministratorKey">
            <summary>
            administrator密码
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.IsPasswordHashed">
            <summary>
            管理员密码是否加密
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoUrl">
            <summary>
            SSO接口URL
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoServername">
            <summary>
            SSO服务器名称
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoUsername">
            <summary>
            SSO用户
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoPassword">
            <summary>
            SSO密码
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoDomain">
            <summary>
            SSO域名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SsoWdID">
            <summary>
            WD的 ID
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.ADUrl">
            <summary>
            站群广告管理站点地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.FullTextSearchUrl">
            <summary>
            全文检索服务器地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.SiteUrl">
            <summary>
            当前站点的Url
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.PluginSN">
            <summary>
            站点插件序列号
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.ShopLoginName">
            <summary>
            插件商店登陆名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.ShopPassword">
            <summary>
            插件商店密码
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.LDAPEnable">
            <summary>
            是否启用LDAP服务器，如AD
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.PassportServiceUrl">
            <summary>
            集中身份认证服务地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.SiteConfigInfo.PassportAuthPage">
            <summary>
            集中身份认证，登录验证页面
            </summary>
        </member>
        <member name="P:We7.Framework.Config.AdviceEmailConfigs.Item(System.String)">
            <summary>
            根据邮件类型得到邮件配置信息
            </summary>
            <param name="emailType"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Config.GeneralConfigInfo">
            <summary>
            网站基本设置描述类, 加[Serializable]标记为可序列化
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableHtmlTemplate">
            <summary>
            是否启用Html静态化的模板
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableCookieAuthentication">
            <summary>
            允许Cookie验证
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SSOSiteUrls">
            <summary>
            单点登陆Url
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SiteLogo">
            <summary>
            站点logo
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ProductName">
            <summary>
            产品名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ProductVersion">
            <summary>
            产品版本
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SiteTitle">
            <summary>
            网站名称
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SiteFullName">
            <summary>
            网站所属公司全名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IcpInfo">
            <summary>
            网站备案信息
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.RewriteUrl">
            <summary>
            伪静态url的替换规则
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.UrlExtName">
            <summary>
            伪静态url的扩展名:".aspx"/".html"
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.PostInterval">
            <summary>
            发帖灌水预防(秒)
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkStatus">
            <summary>
            图片附件添加水印 
            0=不使用 1=左上 2=中上 3=右上 4=左中 ... 9=右下
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkType">
            <summary>
            图片附件添加何种水印 0=文字 1=图片
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkTransparency">
            <summary>
            图片水印透明度 取值范围1--10 (10为不透明)
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkText">
            <summary>
            图片附件添加文字水印的内容 
            {1}表示网站标题 {2}表示网站地址 {3}表示当前日期 {4}表示当前时间, 
            例如: {3} {4}上传于{1} {2}
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkPicfile">
            <summary>
            图片水印文件
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkPic">
            <summary>
            使用的水印图片的名称
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkFontName">
            <summary>
            图片附件添加文字水印的字体
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.WaterMarkFontSize">
            <summary>
            图片添加文字水印的大小(像素)
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.AttachImageQuality">
            <summary>
            图片压缩质量
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.MaxWidthOfUploadedImg">
            <summary>
            上传图片的最大宽度，单位：像素
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ArticleAutoShare">
            <summary>
            文章自动同步
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.CutToMaxWidthOfUploadedImg">
            <summary>
            是否自动缩小上传图片到最大限定尺寸
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.OverdueDateTime">
            <summary>
            设置文章，产品，展会等的过期时间
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ArticlePhotoSize">
            <summary>
            设置文章内小图片尺寸
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ADVisbleToSite">
            <summary>
            区分站群总站和分站，0为分站广告过滤，1为总站，广告不过滤
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultTemplateGroupFileName">
            <summary>
            默认模板组文件名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultTemplateGroup">
            <summary>
            默认模板组
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultHomePageTitle">
            <summary>
            默认首页标题
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultChannelPageTitle">
            <summary>
            默认频道页标题
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultContentPageTitle">
            <summary>
            默认内容页标题
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ArticleAutoPublish">
            <summary>
            文章自动发布
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.AllowSignup">
            <summary>
            允许申请注册
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.AllCutCheckBox">
            <summary>
            允许用户裁剪
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SystemMail">
            <summary>
            系统邮件
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SysMailUser">
            <summary>
            邮件用户
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SysMailPassword">
            <summary>
            邮件密码
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SysMailServer">
            <summary>
            系统邮件服务器
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.NotifyMail">
            <summary>
            邮件通知地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EmailGarbageKey">
            <summary>
            垃圾邮件关键字
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.GenericUserManageType">
            <summary>
            通用用户管理类型
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IsAddLog">
            <summary>
            是否开启日志记录功能
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IsAuditComment">
            <summary>
            评论是否审核后发布
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableLoginAuhenCode">
            <summary>
            登录是否验证
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ArticleUrlGenerator">
            <summary>
            文章URL样式
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SiteSkinsBasePath">
            <summary>
            站点皮肤根目录
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableSiteSkins">
            <summary>
            启用皮肤功能文件夹
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.TemplateBasePath">
            <summary>
            模板根目录
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.TemplateGroupBasePath">
            <summary>
            模板组根目录
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DescriptionPageMeta">
            <summary>
             页面描述(description)
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.KeywordPageMeta">
            <summary>
            页面关键词(keyword)
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.AdMode_SingletonSite">
            <summary>
            是否单站点广告模式
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.CMSTheme">
            <summary>
            后台风格主题
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ArticleSourceDefault">
            <summary>
            文章来源默认值
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultCompanyRole">
            <summary>
            设置企业会员默认角色
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultPersonRole">
            <summary>
            设置个人会员默认角色
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableCache">
            <summary>
            是否开启缓存
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IpSecurityEnabled">
            <summary>
            是否开启IP安全策略
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IpSecurityDefaultValue">
            <summary>
            IP安全策略栏目默认值
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.CacheTimeSpan">
            <summary>
            缓存更新时间间隔（秒）
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SysPopServer">
            <summary>
            收邮件服务
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.Copyright">
            <summary>
            版权申明
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.CopyrightOfWe7">
            <summary>
            We7固定版权申明
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.Links">
            <summary>
            相关链接（IsOem为true时启用）
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.LinksOfWe7">
            <summary>
            We7
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.OnlyLoginUserCanVisit">
            <summary>
            仅允许登录用户访问网站
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.PluginServer">
            <summary>
            插件服务器地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.UrlFormat">
            <summary>
            url静态文件后缀：html？ashx？
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.UrlRewriterProvider">
            <summary>
            URL重写级别：IIS？Asp.net？
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IPStrategy">
            <summary>
            IP过滤策略
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.StartTemplateMap">
            <summary>
            启用模版地图
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.SiteBuildState">
            <summary>
            网站状态：debug-控件调试，edit-网站建设，run-网站运行
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IsOEM">
            <summary>
            是否为OEM版本，开启此开关，配置文件中的版权信息才会起作用
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.Upload_AllowImageType">
            <summary>
            文件上传允许扩展名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.Upload_Forbid">
            <summary>
            文件上传禁止扩展名
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IPDBConnection">
            <summary>
            IP地址数据库连接串
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.StartPageViewModule">
            <summary>
            是否启用流量统计功能
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.BbsDomain">
            <summary>
            bbs网站domain
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.BbsPwdKey">
            <summary>
            bbs网站密码key
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ShowAllInfo">
            <summary>
            是否显示所有信息
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.AllowParentArticle">
            <summary>
            允许文章具备父子关系
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.JiaMiKey">
            <summary>
            <!--网站字符串加密，加密密钥，请设置8位字符串-->
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.EnableSingleTable">
            <summary>
            是否启用单表存储
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.ShopService">
            <summary>
            插件商店服务地址
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.UserRegisterMode">
            <summary>
            用户注册验证模式；
            none-无；email-邮箱验证; manual-人工审核
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.DefaultTemplateEditor">
            <summary>
            默认模板编辑器文件；
            默认为0：/admin/DataControlUI/Compose.aspx
            1为可拖拽编辑器：/admin/Template/TemplateFileDetail.aspx
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.Theme">
            <summary>
            可视化的主题样式
            </summary>
        </member>
        <member name="P:We7.Framework.Config.GeneralConfigInfo.IsDemoSite">
            <summary>
            是否是演示站点
            </summary>
        </member>
        <member name="T:We7.IXml">
            <summary>
            We7 XML序列化与反序列化接口
            </summary>
        </member>
        <member name="M:We7.IXml.ToXml(System.Xml.XmlDocument)">
            <summary>
            输出到XML文件
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:We7.IXml.FromXml(System.Xml.XmlElement)">
            <summary>
            从XML文件加载数据
            </summary>
            <param name="xe"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Common.IIC">
            <summary>
            ImageInfoCollection的简写
            </summary>
        </member>
        <member name="T:We7.Framework.Common.ImageItem">
            <summary>
            图片项目信息
            </summary>
        </member>
        <member name="T:We7.Framework.Util.EnumHelper">
            <summary>
            枚举帮助类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.EnumHelper.EnumParseDictionary(System.Type)">
            <summary>
            将枚举转换成Dictionary类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.We7Func`1">
             <summary>
            不带参数，有返回值 匿名委托
             </summary>
             <typeparam name="TResult">返回值类型</typeparam>
             <returns></returns>
        </member>
        <member name="T:We7.Framework.Lazy`1">
            <summary>
            实现延迟加载
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
        </member>
        <member name="T:We7.Framework.Lazy">
            <summary>
            延迟加载
            </summary>
        </member>
        <member name="M:We7.Framework.Lazy.New``1(We7.Framework.We7Func{``0})">
            <summary>
            延迟加载创建对象
            </summary>
            <typeparam name="TResult">对象类型</typeparam>
            <param name="creator">创建对象的匿名委托</param>
            <returns>创建的对象</returns>
        </member>
        <member name="T:We7.We7Helper">
            <summary>
            常用静态方法类
            </summary>
        </member>
        <member name="M:We7.We7Helper.Base64Encode(System.String)">
            <summary>
            将字符串编码为Base64字符串
            </summary>
            <param name="str">要编码的字符串</param>
        </member>
        <member name="M:We7.We7Helper.Base64Decode(System.String)">
            <summary>
            将Base64字符串解码为普通字符串
            </summary>
            <param name="str">要解码的字符串</param>
        </member>
        <member name="M:We7.We7Helper.RemoveAppFromPath(System.String,System.String)">
            <summary>
            url路径去掉应用路径（虚拟目录）部分
            </summary>
            <param name="path"></param>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.GUIDToFormatString(System.String)">
            <summary>
            将GUID格式的字符串转换为合法对象名称
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.FormatToGUID(System.String)">
            <summary>
            标准化 ID 格式，变为{00000000-0000-0000-0000-000000000000}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.FilterJSChars(System.String)">
            <summary>
            输出JS中的单引号与双引号
            </summary>
            <param name="instring"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.GetCityNameByIP(System.String)">
            <summary>
            从IP获得所在城市
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.GetDomainFromUrl(System.String)">
            <summary>
            从URL获取域名
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.GetChannelUrlFromUrl(System.String)">
            <summary>
            返回url中去掉文件名部分。如/news/2.html 中的/news/
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.ConvertTextToHtml(System.String)">
            <summary>
            普通文本转换为html：包括回车换行符\n\t等
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.RemoveBrarket(System.String)">
            <summary>
            将GUID格式的字符串转换为合法对象名称
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.ConvertPageBreakFromVisualToChar(System.String)">
            <summary>
            分页符转换：由div转换为字符【分页符】
            </summary>
            <param name="content">内容</param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.ConvertPageBreakToHtml(System.String)">
            <summary>
            分页符暂时转为JAVASCRIPT隐藏显示效果
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.ConvertPageBreakFromCharToVisual(System.String)">
            <summary>
            分页符转换：由【分页符】转换为字符div
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.UrlContainKeys(System.Web.HttpContext,System.String)">
            <summary>
            URL参数中是否包含全部的MenuUrl.QueryKey
            </summary>
            <param name="HttpContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.BytesToObject(System.Byte[])">
            <summary>
            将一个二进制数组转换为一个对象
            </summary>
            <param name="bytes">bytes为非空数组,否则会抛出异常</param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.ObjectToBytes(System.Object)">
            <summary>
            将一个object转化为二进制数组
            </summary>
            <param name="obj">能序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.FormatFileSize(System.Int64)">
             <summary>
            文件大小格式化
             </summary>
             <param name="fileSize"></param>
             <returns></returns>
        </member>
        <member name="M:We7.We7Helper.CopyObjectPropertiesTo(System.Object,System.Object)">
            <summary>
            复制对象的所有属性到另一个对象
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:We7.We7Helper.RaiseException(System.String,System.String,System.String,System.String,We7.We7Helper.FaultCode)">
            <summary>
            封装异常为SoapException
            </summary>
            <param name="errorFunction">引发异常的方法名称</param>
            <param name="errorMessage">错误信息</param>
            <param name="errorNumber">错误号</param>
            <param name="errorSource">错误源</param>
            <param name="code">异常类型</param>
            <returns>封装后的SoapException</returns>
        </member>
        <member name="M:We7.We7Helper.SoapExceptionInfo(System.Web.Services.Protocols.SoapException)">
            <summary>
            获取SoaException错误信息
            此方法仅用于调用WebService的错误处理
            </summary>
            <param name="soapEx"></param>
            <returns>返当前错误信息</returns>
        </member>
        <member name="M:We7.We7Helper.SoapExceptionInfo(System.Web.Services.Protocols.SoapException,System.String)">
            <summary>
            获取SoaException错误信息
            此方法仅用于调用WebService的错误处理
            </summary>
            <param name="soapEx"></param>
            <param name="key">信息类型关键字：message、source、code其一</param>
            <returns>返当前错误信息</returns>
        </member>
        <member name="P:We7.We7Helper.EmptyWapGUID">
            <summary>
            {00000000-1111-0000-0000-000000000000}
            </summary>
        </member>
        <member name="T:We7.We7Helper.FaultCode">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="T:We7.Framework.Config.GeneralConfigs">
            <summary>
            网站基本设置类
            </summary>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigs.ResetConfig">
            <summary>
            重设配置类实例
            </summary>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigs.GetConfig">
            <summary>
            获取当前系统常用参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigs.SaveConfig(We7.Framework.Config.GeneralConfigInfo)">
            <summary>
            保存配置到config文件
            </summary>
            <param name="configinfo"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Config.GeneralConfigs.Serialiaze(We7.Framework.Config.GeneralConfigInfo,System.String)">
            <summary>
            序列化配置信息为XML
            </summary>
            <param name="configinfo">配置信息</param>
            <param name="configFilePath">配置文件完整路径</param>
        </member>
        <member name="T:We7.Framework.Util.XmlHelper">
            <summary>
            Xml操作帮助类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.CreateXmlDocument(System.String,System.String,System.String)">
            <summary>
            创建XML文件
            </summary>
            <param name="fileName">创建文件的完全限定名(包含路径)</param>
            <param name="rootNodeName">根节点名称</param>
            <param name="encoding">xml文档编码 (默认:utf-8)</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.CreateXmlDocument(System.String,System.String)">
            <summary>
            创建XML文件
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="rootNodeName">根节点名称</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.CreateXmlNode(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            创建一个子节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询父节点的XPath路径</param>
            <param name="xmlNodeName">创建的节点名称</param>
            <param name="innerXml">创建的节点内xml文字</param>
            <param name="attributes">需要创建的属性字典(为NULL,则不创建属性)</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.CreateOrUpdateXmlNode(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            创建或修改一个子节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询父节点的XPath路径</param>
            <param name="xmlNodeName">创建的节点名称</param>
            <param name="innerXml">创建的节点内xml文字</param>
            <param name="attributes">需要创建的属性字典(为NULL,则不创建属性)</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.CreateOrUpdateAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            创建或修改一个属性
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询该属性节点的XPath路径</param>
            <param name="name">创建或修改的属性名称</param>
            <param name="value">创建或修改的属性值</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.DeleteXmlNode(System.String,System.String)">
            <summary>
            删除一个节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询该节点的XPath路径</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.BatchDeleteXmlNode(System.String,System.String)">
            <summary>
            批量删除节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询节点集合的XPath路径</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.DeleteAttribute(System.String,System.String,System.String)">
            <summary>
            删除属性
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询该属性节点的XPath路径</param>
            <param name="name">属性名称</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.GetXmlNode(System.String,System.String)">
            <summary>
            获取一个节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询该节点的XPath路径</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.GetXmlNodeByAttribute(System.String,System.String,System.String,System.String)">
            <summary>
             在节点项里面查找--根据节点的属性名称和属性值得到第一个符合的节点
            </summary>
            <param name="fileName"></param>
            <param name="xpath"></param>
            <param name="attrText"></param>
            <param name="attrValue"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.GetTreeXmlNodeByAttribute(System.Xml.XmlNodeList,System.String,System.String)">
            <summary>
            在节点树里面查找--根据节点的属性名称和属性值得到第一个符合的节点
            </summary>
            <param name="list"></param>
            <param name="attrText"></param>
            <param name="attrValue"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.GetXmlNodeList(System.String,System.String)">
            <summary>
            获取多个节点
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询多个节点的XPath路径</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="M:We7.Framework.Util.XmlHelper.GetXmlAttribute(System.String,System.String,System.String)">
            <summary>
            获取属性
            </summary>
            <param name="fileName">XML文件的完全限定路径(包含路径)</param>
            <param name="xPath">查询该属性节点的XPath路径</param>
            <returns>成功返回True,失败返回Fasle</returns>
        </member>
        <member name="T:We7.Framework.BaseAction">
            <summary>
            执行Action的基础类
            </summary>
        </member>
        <member name="F:We7.Framework.BaseAction.ActionInstance">
            <summary>
            Action对象的实例的关键字
            </summary>
        </member>
        <member name="M:We7.Framework.BaseAction.Execute">
            <summary>
            执行Action
            </summary>
        </member>
        <member name="M:We7.Framework.BaseAction.GetAction(System.String)">
            <summary>
            取得当前的Action
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.GetAction``1(System.String)">
            <summary>
            取得当前的Action
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.Get(System.String,System.String)">
            <summary>
            取得当前值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.InitProperties">
            <summary>
            根据Request中的数据初始化类中的属性
            </summary>
        </member>
        <member name="M:We7.Framework.BaseAction.GetValue(System.Web.HttpRequest,System.Reflection.PropertyInfo)">
            <summary>
            取得数据
            </summary>
            <param name="request"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.GetStringValues(System.Web.HttpRequest,System.String)">
            <summary>
            取得集合数据
            </summary>
            <param name="r"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.BaseAction._ActionID">
            <summary>
            当前的ActionID
            </summary>
        </member>
        <member name="P:We7.Framework.BaseAction.Message">
            <summary>
            当前Action的信息
            </summary>
        </member>
        <member name="P:We7.Framework.BaseAction.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:We7.Framework.BaseAction.HelperFactory">
            <summary>
            业务助手工厂
            </summary>
        </member>
        <member name="M:We7.Framework.BaseAction.RequestParser`1.We7#Framework#BaseAction#IRequestParser#GetValue(System.String)">
            <summary>
            取得单个值
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.RequestParser`1.We7#Framework#BaseAction#IRequestParser#GetValue(System.Collections.Generic.List{System.String})">
            <summary>
            取得列表数据
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.RequestParser`1.TryParse(System.String)">
            <summary>
            解析字符串为基础数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.BaseAction.RequestParser`1.TryParse(System.Collections.Generic.List{System.String})">
            <summary>
            解析字符串列表为基础数据列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.ListAction`1">
            <summary>
            针对列表数据的Action
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.RecordCount">
            <summary>
            记录的条数
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.PageIndex">
            <summary>
            当前的页数
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.StartIndex">
            <summary>
            开始页
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.EndIndex">
            <summary>
            结束页
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.ItemsCount">
            <summary>
            每一页的记录数
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.PageCount">
            <summary>
            总共有多少页
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.PageSize">
            <summary>
            页记录
            </summary>
        </member>
        <member name="P:We7.Framework.ListAction`1.Records">
            <summary>
            取得所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSql(System.String)">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSqlTran(System.Collections.Generic.List{System.String})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">多条SQL语句</param>		
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSql(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSqlGet(System.String,System.String)">
            <summary>
            执行带一个存储过程参数的的SQL语句。
            </summary>
            <param name="SQLString">SQL语句</param>
            <param name="content">参数内容,比如一个字段是格式复杂的文章，有特殊符号，可以通过这个方式添加</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.GetSingle(System.String)">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteReader(System.String)">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.Query(System.String)">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行SQL语句，返回影响的记录数
            </summary>
            <param name="SQLString">SQL语句</param>
            <returns>影响的记录数</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteSqlTran(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.SqlClient.SqlParameter[]}})">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="SQLStringList">SQL语句的哈希表（key为sql语句，value是该语句的SqlParameter[]）</param>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.GetSingle(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条计算查询结果语句，返回查询结果（object）。
            </summary>
            <param name="SQLString">计算查询结果语句</param>
            <returns>查询结果（object）</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回SqlDataReader ( 注意：调用该方法后，一定要对SqlDataReader进行Close )
            </summary>
            <param name="strSQL">查询语句</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:Demo.Framework.Data.SqlDbHelper.Query(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询语句，返回DataSet
            </summary>
            <param name="SQLString">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:We7.Framework.Util.RequestHelper">
            <summary>
            Request帮助类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.RequestHelper.Get``1(System.String)">
            <summary>
            获取参数值 不存在返回默认值
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="name">参数名</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.RequestHelper.Get``1(System.String,``0)">
            <summary>
            获取参数值
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="name">参数名</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.RequestHelper.AddOrUpdateParam(System.String,System.String,System.String)">
            <summary>
            添加或修改参数值
            </summary>
            <param name="url">Url链接字符串</param>
            <param name="key">参数名称</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.RequestHelper.RemoveParam(System.String,System.String)">
            <summary>
            删除参数
            </summary>
            <param name="url">URL链接</param>
            <param name="key">参数名称</param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Util.CoverToPinyin">
            <summary>
            汉字转换为拼音
            </summary>
        </member>
        <member name="M:We7.Framework.Util.CoverToPinyin.Convert(System.String)">
            <summary>
            把汉字转换成拼音(全拼)
            </summary>
            <param name="hzString">汉字字符串</param>
            <returns>转换后的拼音(全拼)字符串</returns>
        </member>
        <member name="T:We7.Framework.Util.We7Utils">
            <summary>
            工具类，来自DiscuzNT
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetRegexCompiledOptions">
            <summary>
            得到正则编译参数设置
            </summary>
            <returns>参数设置</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetInArrayID(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetInArrayID(System.String,System.String[])">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>		
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InArray(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InArray(System.String,System.String[])">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">字符串数组</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InArray(System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InArray(System.String,System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InArray(System.String,System.String,System.String,System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.RTrim(System.String)">
            <summary>
            删除字符串尾部的回车/换行/空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ClearBR(System.String)">
            <summary>
            清除给定字符串中的回车及换行符
            </summary>
            <param name="str">要清除的字符串</param>
            <returns>清除后返回的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CutString(System.String,System.Int32)">
            <summary>
            从字符串的指定位置开始截取到字符串结尾的了符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径（物理路径）
            </summary>
            <param name="strPath">指定的路径（网络路径）</param>
            <returns>对应绝对路径（物理路径）</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.FileExists(System.String)">
            <summary>
            返回文件是否存在
            </summary>
            <param name="filename">文件名</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ResponseFile(System.String,System.String,System.String)">
            <summary>
            以指定的ContentType输出指定文件文件
            </summary>
            <param name="filepath">文件路径</param>
            <param name="filename">输出的文件名</param>
            <param name="filetype">将文件输出时设置的ContentType</param>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsImgFilename(System.String)">
            <summary>
            判断文件名是否为浏览器可以直接显示的图片文件名
            </summary>
            <param name="filename">文件名</param>
            <returns>是否可以直接显示</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IntToStr(System.Int32)">
            <summary>
            int型转换为string型
            </summary>
            <returns>转换后的string类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.MD5(System.String)">
            <summary>
            MD5函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>MD5结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            /// <param name="str">原始字符串</param>
            <returns>SHA256结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ReplaceString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            自定义的替换字符串函数
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetSpacesString(System.Int32)">
            <summary>
            生成指定数量的html空格符号
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsValidEmail(System.String)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsSafeUserInfoString(System.String)">
            <summary>
            检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CleanInput(System.String)">
            <summary>
            清理字符串
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetFilename(System.String)">
            <summary>
            返回URL中结尾的文件名
            </summary>		
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrFormat(System.String)">
            <summary>
            替换回车换行符为html换行符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetDate">
            <summary>
            返回标准日期格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetDate(System.String,System.String)">
            <summary>
            返回指定日期格式
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetDateTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetDateTime(System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetDateTimeF">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetStandardDateTime(System.String,System.String)">
            <summary>
            返回标准时间 
            </summary>
        </member>
        <!-- 对于成员“M:We7.Framework.Util.We7Utils.GetStandardDateTime(System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:We7.Framework.Util.We7Utils.GetStandardDate(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:We7.Framework.Util.We7Utils.IsTime(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.mashSQL(System.String)">
            <summary>
            改正sql语句中的转义字符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ChkSQL(System.String)">
            <summary>
            替换sql语句中的有问题符号
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.transHtml(System.String,System.String)">
            <summary>
            转换为静态html
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ToSChinese(System.String)">
            <summary>
            转换为简体中文
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ToTChinese(System.String)">
            <summary>
            转换为繁体中文
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SplitString(System.String,System.String,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.PadStringArray(System.String[],System.Int32,System.Int32)">
            <summary>
            过滤字符串数组中每个元素为合适的大小
            当长度小于minLength时，忽略掉,-1为不限制最小长度
            当长度大于maxLength时，取其前maxLength位
            如果数组中有null元素，会被忽略掉
            </summary>
            <param name="minLength">单个元素最小长度</param>
            <param name="maxLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SplitString(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <param name="maxElementLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SplitString(System.String,System.String,System.Boolean)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.DistinctStringArray(System.String[],System.Int32)">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <param name="maxElementLength">字符串数组中单个元素的最大长度</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.DistinctStringArray(System.String[])">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.EncodeHtml(System.String)">
            <summary>
            替换html字符
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrFilter(System.String,System.String)">
            <summary>
            进行指定的替换(脏字过滤)
            </summary>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="forumrewrite">当前版块是否使用URL重写</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetPostPageNumbers(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得帖子的伪静态页码显示链接
            </summary>
            <param name="expname"></param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <param name="anchor">锚点</param>
            <returns>页码html</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.HtmlEncode(System.String)">
            <summary>
            返回 HTML 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.HtmlDecode(System.String)">
            <summary>
            返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.UrlEncode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.UrlDecode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.FindNoUTF8File(System.String)">
            <summary>
            返回指定目录下的非 UTF8 字符集文件
            </summary>
            <param name="Path">路径</param>
            <returns>文件名的字符串数组</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsUTF8(System.IO.FileStream)">
            <summary>
            判断文件流是否为UTF8字符集
            </summary>
            <param name="sbInputStream">文件流</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.FormatBytesStr(System.Int32)">
            <summary>
            格式化字节数字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SafeInt32(System.Object)">
            <summary>
            将long型数值转换为Int32类型
            </summary>
            <param name="objNum"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrDateDiffSeconds(System.String,System.Int32)">
            <summary>
            返回相差的秒数
            </summary>
            <param name="Time"></param>
            <param name="Sec"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrDateDiffMinutes(System.String,System.Int32)">
            <summary>
            返回相差的分钟数
            </summary>
            <param name="time"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrDateDiffHours(System.String,System.Int32)">
            <summary>
            返回相差的小时数
            </summary>
            <param name="time"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CreateDir(System.String)">
            <summary>
            建立文件夹
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ReplaceStrToScript(System.String)">
            <summary>
            为脚本替换特殊字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.InIPArray(System.String,System.String[])">
            <summary>
            返回指定IP是否在指定的IP数组所限定的范围内, IP数组内的IP地址可以使用*表示该IP段任意, 例如192.168.1.*
            </summary>
            <param name="ip"></param>
            <param name="iparray"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetAssemblyVersion">
            <summary>
            获得Assembly版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetAssemblyProductName">
            <summary>
            获得Assembly产品名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetAssemblyCopyright">
            <summary>
            获得Assembly产品版权
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.MakeSureDirectoryPathExists(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="name">名称</param>
            <returns>创建是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.WriteCookie(System.String,System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="strValue">过期时间(分钟)</param>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetCookie(System.String,System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetTrueForumPath">
            <summary>
            得到论坛的真实路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsDateString(System.String)">
            <summary>
            判断字符串是否是yy-mm-dd字符串
            </summary>
            <param name="str">待判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.RemoveHtml(System.String)">
            <summary>
            移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.RemoveUnsafeHtml(System.String)">
            <summary>
            过滤HTML中的不安全标签
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.RemoveFontTag(System.String)">
            <summary>
            将用户组Title中的font标签去掉
            </summary>
            <param name="title">用户组Title</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetTextFromHTML(System.String)">
            <summary>
            从HTML中获取文本,保留br,p,img
            </summary>
            <param name="HTML"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToInt(System.String,System.Int32)">
            <summary>
            将字符串转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToFloat(System.Object,System.Single)">
            <summary>
            Object型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsInt(System.String)">
            <summary>
            验证是否为正整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ClearLastChar(System.String)">
            <summary>
            删除最后一个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.BackupFile(System.String,System.String,System.Boolean)">
            <summary>
            备份文件
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <param name="overwrite">当目标文件存在时是否覆盖</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.BackupFile(System.String,System.String)">
            <summary>
            备份文件,当目标文件存在时覆盖
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.RestoreFile(System.String,System.String,System.String)">
            <summary>
            恢复文件
            </summary>
            <param name="backupFileName">备份文件名</param>
            <param name="targetFileName">要恢复的文件名</param>
            <param name="backupTargetFileName">要恢复文件再次备份的名称,如果为null,则不再备份恢复文件</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetTemplateCookieName">
            <summary>
            获取记录模板id的cookie名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.SBCCaseToNumberic(System.String)">
            <summary>
            将全角数字转换为数字
            </summary>
            <param name="SBCCase"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ToColor(System.String)">
            <summary>
            将字符串转换为Color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ConvertSimpleFileName(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换长文件名为短文件名
            </summary>
            <param name="filename"></param>
            <param name="repstring"></param>
            <param name="leftnum"></param>
            <param name="rightnum"></param>
            <param name="charnum"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.DataTableToJSON(System.Data.DataTable)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.DataTableToJson(System.Data.DataTable,System.Boolean)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <param name="dispose">数据表转换结束后是否dispose掉</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.StrIsNullOrEmpty(System.String)">
            <summary>
            字段串是否为Null或为""(空)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.IsNumericList(System.String)">
            <summary>
            是否为数值串列表，各数值间用","间隔
            </summary>
            <param name="numList"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CheckColorValue(System.String)">
            <summary>
            检查颜色值是否为3/6位的合法颜色
            </summary>
            <param name="color">待检查的颜色</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetAjaxPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取ajax形式的分页链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="callback">回调函数</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.GetSourceTextByUrl(System.String)">
            <summary>
            根据Url获得源文件内容
            </summary>
            <param name="url">合法的Url地址</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.ConvertToUnixTimestamp(System.DateTime)">
            <summary>
            转换时间为unix时间戳
            </summary>
            <param name="date">需要传递UTC时间,避免时区误差,例:DataTime.UTCNow</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.JsonCharFilter(System.String)">
            <summary>
            Json特符字符过滤，参见http://www.json.org/
            </summary>
            <param name="sourceStr">要过滤的源字符串</param>
            <returns>返回过滤的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.MergeString(System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>合并到的目的字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.MergeString(System.String,System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>并到字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.Combine(System.String[])">
            <summary>
            取得当前的路径
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.FindControl(System.String,System.Web.UI.Control)">
            <summary>
            查找指定容器中的控件
            </summary>
            <param name="id"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.Invoke(System.String,System.String,System.Object[])">
            <summary>
            执行数据值
            </summary>
            <param name="fullTypeName">类型全名</param>
            <param name="method">方法名称</param>
            <param name="args">参数</param>
            <returns>方法执行后得到的值</returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.CNToUnicode(System.String)">
            <summary>
            中文字符转化为Unicode字符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.We7Utils.UnicodeToCN(System.String)">
            <summary>
            Unicode字符转化为中文字符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Util.We7Utils.Monthes">
            <summary>
            根据阿拉伯数字返回月份的名称(可更改为某种语言)
            </summary>	
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToBool(System.Object,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.ObjectToInt(System.Object)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.ObjectToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToInt(System.String)">
            <summary>
            将对象转换为Int32类型,转换失败返回0
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToInt(System.String,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToFloat(System.Object,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.ObjectToFloat(System.Object,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.ObjectToFloat(System.Object)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToFloat(System.Object)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:We7.Framework.Util.TypeConverter.StrToObjectByDbType(System.String,System.Data.DbType)">
            <summary>
            string型转换为
            </summary>
            <param name="strValue"></param>
            <param name="dbtype"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Util.JavaScriptManager">
            <summary>
            Javascript管理器
            </summary>
        </member>
        <member name="M:We7.Framework.Util.JavaScriptManager.Include(System.String[])">
            <summary>
            包含JS引用。
            </summary>
            <param name="filePaths"></param>
        </member>
        <member name="M:We7.Framework.Util.JavaScriptManager.GetIncludedJavaScript">
            <summary>
            获取已经包含的JS列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Util.HtmlWidgetHelper">
            <summary>
            静态部件生成处理类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.HtmlWidgetHelper.CreateCreateHtmlWidget(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成静态部件
            </summary>
            <param name="widgetname">部件description</param>
            <param name="fileName">部件文件名称</param>
            <param name="widgetValue">部件内容</param>
            <param name="path">路径</param>
            <param name="isNew">是否新增</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.HtmlWidgetHelper.WriteFileWithEncoding(System.String,System.String,System.IO.FileMode,System.Text.Encoding)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件完全限定路径</param>
            <param name="content">需要写入的内容</param>
            <param name="fileModel">如果文件存在则设置添加模式(默认为追加)</param>
            <param name="encoding">编码</param>
            <returns>成功：空；失败：错误消息</returns>
        </member>
        <member name="F:We7.Framework.Util.EnumCreateHtmlWidget.error">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:We7.Framework.Util.EnumCreateHtmlWidget.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:We7.Framework.Util.EnumCreateHtmlWidget.repeat">
            <summary>
            存在相同文件
            </summary>
        </member>
        <member name="T:We7.Framework.HelperAttribute">
            <summary>
            助手属性：用于描述dll加载获取的实体对象
            </summary>
        </member>
        <member name="T:We7.StateMgr">
            <summary>
            用于所有表的状态管理
            </summary>
        </member>
        <member name="M:We7.StateMgr.ReplaceAt(System.String,System.Int32,System.String)">
            <summary>
            用新字符替换字符串指定位置字符
            </summary>
            <param name="oldString">原字符串</param>
            <param name="position">被替换的字符位置</param>
            <param name="newString">新字符</param>
            <returns>新字符串</returns>
        </member>
        <member name="T:We7.Framework.Util.SerializationHelper">
            <summary>
            数据序列化帮助类
            </summary>
        </member>
        <member name="M:We7.Framework.Util.SerializationHelper.Load(System.Type,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.SerializationHelper.Save(System.Object,System.String)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:We7.Framework.Util.SerializationHelper.Serialize(System.Object)">
            <summary>
            xml序列化成字符串
            </summary>
            <param name="obj">对象</param>
            <returns>xml字符串</returns>
        </member>
        <member name="M:We7.Framework.Util.SerializationHelper.DeSerialize(System.Type,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="type"></param>
            <param name="s">XML字符串</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Util.SerializationHelper.Load``1(System.String)">
            <summary>
            反序列化XML文件
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="file">需要反序列化的文件路径</param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Util.ImageUtils">
            <summary>
            图象处理类
            thehim 2007-10-20
            </summary>
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            
            <summary>
            生成Jpeg缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式:"HW":指定高宽缩放（可能变形）; "W"://指定宽，高按比例;"H"://指定高，宽按比例; "Cut"://指定高宽裁减（不变形）</param>    
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            生成gif格式缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式:"HW":指定高宽缩放（可能变形）; "W"://指定宽，高按比例;"H"://指定高，宽按比例; "Cut"://指定高宽裁减（不变形）</param>    
            <param name="imageType"></param>
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.AddImageSignPic(System.Drawing.Image,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            加图片水印
            </summary>
            <param name="filename">文件名</param>
            <param name="watermarkFilename">水印文件名</param>
            <param name="watermarkStatus">图片水印位置</param>
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.AddImageSignText(System.Drawing.Image,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            增加图片文字水印
            </summary>
            <param name="filename">文件名</param>
            <param name="watermarkText">水印文字</param>
            <param name="watermarkStatus">图片水印位置</param>
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.GenerateImgFromText(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Drawing.Color,System.String)">
            <summary>
            从文字生成图片
            </summary>
            <param name="filename">图片保存文件名</param>
            <param name="myText">文字</param>
            <param name="with">宽</param>
            <param name="height">高</param>
            <param name="fontname">字体</param>
            <param name="fontsize">字体大小</param>
            <param name="color">字体颜色</param>
        </member>
        <member name="F:We7.Framework.Util.ImageUtils.indexedPixelFormats">
            
            <summary>
            会产生graphics异常的PixelFormat
            </summary>
        </member>
        <member name="M:We7.Framework.Util.ImageUtils.IsPixelFormatIndexed(System.Drawing.Imaging.PixelFormat)">
            
            <summary>
            判断图片的PixelFormat 是否在 引发异常的 PixelFormat 之中
            </summary>
            <param name="imgPixelFormat">原图片的PixelFormat</param>
            <returns></returns>
        </member>
        <member name="T:We7.EnumLibrary">
            <summary>
            用于状态管理的枚举类库
            请将处理的业务，及相关
            的状态放置于此。
            </summary>
        </member>
        <member name="F:We7.EnumLibrary.StateLength">
            <summary>
            状态字段总长
            </summary>
        </member>
        <member name="F:We7.EnumLibrary.PlaceLenth">
            <summary>
            状态位长度，即每个状态所占字串长度
            </summary>
        </member>
        <member name="F:We7.EnumLibrary.Position">
            <summary>
            请依次对应于业务枚举进行填写
            状态在State字段所处位置，从左至右依次为0,2,4,6,8,…
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.Business">
            <summary>
            所要处理的业务枚举
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.AdPublishState">
            <summary>
            广告关联状态
            0表示禁用，1表示站点申请，2站群表示通过审核
            同时费除广告位与广告的状态审核
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.PermissionType">
            <summary>
            权限应用类型 EntityPermission表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.ChannelContentType">
            <summary>
            文章内容类型 Channel表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.ArticleType">
            <summary>
            文章内容类型 Article表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.ProductInfoType">
            <summary>
            产品信息发布类型 Article表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.ProductProviderType">
            <summary>
            产品供应商类型 Product表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.IndustryType">
            <summary>
            行业类型 Industry表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.CompanyBaseInfoType">
             <summary>
            公司推荐类型 CompanyBaseInfo表
             </summary>
        </member>
        <member name="T:We7.EnumLibrary.AdviceMode">
            <summary>
            反馈模式 AdviceType表
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.SitePartnership">
            <summary>
            站点关系类型：共享或接收
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.SiteValidateStyle">
            <summary>
            站点关系生效方式：是否必须接收后
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.SiteSyncType">
            <summary>
            站点同步方式：自动/手动
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.SiteAutoUsering">
            <summary>
            是否自动匹配用户
            指同步后以何身份发布，是否自动匹配联盟用户身份
            </summary>
        </member>
        <member name="T:We7.EnumLibrary.UserSearchType">
             <summary>
            
             </summary>
        </member>
        <member name="T:We7.Framework.Helper.DbHelper">
            <summary>
            数据查询业务助手
            </summary>
        </member>
        <member name="M:We7.Framework.Helper.DbHelper.ExecuteSql(System.String)">
            <summary>
            执行语句
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:We7.Framework.Helper.DbHelper.Query(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Helper.DbHelper.Get(System.String)">
            <summary>
            取得单个数据
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Helper.DbHelper.CheckTableExits(System.String)">
            <summary>
            检查表是否存在
            </summary>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Helper.DbHelper.CheckColumnsExits(System.String,System.String[])">
            <summary>
            检查数据表与数据列是否存在
            </summary>
            <param name="tableName"></param>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="T:We7.Framework.Config.AdviceEmailConfigInfo">
            <summary>
            网站基本设置描述类, 加[Serializable]标记为可序列化
            </summary>
        </member>
        <member name="P:We7.Framework.Config.AdviceEmailConfigInfo.EmailType">
            <summary>
            email类型，对应 item节点value属性值，不可以重复
            </summary>
        </member>
        <member name="P:We7.Framework.Config.AdviceEmailConfigInfo.EmailTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:We7.Framework.Config.AdviceEmailConfigInfo.EmailContent">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:We7.We7Exception">
            <summary>
            We7异常处理基础类
            </summary>
        </member>
        <member name="F:We7.Framework.Consts.MODEL_QUERY_ENTITY_KEY">
            <summary>
            模型查询实体
            </summary>
        </member>
        <member name="T:We7.NameType">
            <summary>
            名称类型
            </summary>
        </member>
        <member name="P:We7.NameType.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:We7.NameType.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:We7.NameType.Params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="T:We7.NameValue">
            <summary>
            名称值类型
            </summary>
        </member>
        <member name="P:We7.NameValue.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:We7.NameValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:We7.NameTypeCollection">
            <summary>
            类型名称集合
            </summary>
        </member>
        <member name="M:We7.NameTypeCollection.Get(System.String)">
            <summary>
            根据名称取得类型名称对象
            </summary>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:We7.NameTypeCollection.GetInstance(System.String)">
            <summary>
            按名称取得对象实例
            </summary>
            <param name="name">名称</param>
            <returns>实例</returns>
        </member>
        <member name="M:We7.NameTypeCollection.GetInstance``1(System.String)">
            <summary>
            按名称取得对象实例
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="name">名称</param>
            <returns>实例</returns>
        </member>
        <member name="P:We7.NameTypeCollection.Item(System.String)">
            <summary>
            按名称查询类型字符串
            </summary>
            <param name="name">名称</param>
            <returns>类型</returns>
        </member>
        <member name="T:We7.NameValueCollection">
            <summary>
            名称值类型
            </summary>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.Create(System.Type)">
            <summary>
            创建当前类型的缓存记录
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.Create(System.Object)">
            <summary>
            创建当前类型的缓存记录
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.Create(System.String)">
            <summary>
            创建当前类型的缓存记录
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.GetInstance``1(System.String,We7.Framework.Util.CreateInstanceHandler{``0})">
            <summary>
            获取缓存数据
            </summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="keyword">缓存关键字</param>
            <param name="handler">生成缓存数据的委托</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.GetInstance``1(System.String,We7.Framework.Util.CreateInstanceHandler{``0},System.Int32)">
            <summary>
            获取缓存数据
            </summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="keyword">缓存关键字</param>
            <param name="handler">生成缓存数据的委托</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.GetInstance``1(System.String,We7.Framework.Util.CreateInstanceHandler2{``0},System.String[])">
            <summary>
            获取文件依赖的缓存数据
            </summary>
            <typeparam name="T">返回的数据类型</typeparam>
            <param name="keyword">缓存关键字</param>
            <param name="handler">生成缓存数据的委托</param>
            <param name="filePath">文件依赖的路径</param>
            <returns></returns>
        </member>
        <member name="M:We7.Framework.Cache.CacheRecord.Release">
            <summary>
            释放缓存
            </summary>
        </member>
        <member name="T:We7.Framework.Cache.CacheConfig">
            <summary>
            缓存配置信息
            </summary>
        </member>
        <member name="F:We7.Framework.Cache.CacheConfig.Items">
            <summary>
            当前记录的值信息
            </summary>
        </member>
        <member name="F:We7.Framework.Cache.CacheConfig.Labels">
            <summary>
            当前记录的标签信息
            </summary>
        </member>
        <member name="M:We7.Framework.Cache.CacheConfig.GetDefaultTimeout(System.String)">
            <summary>
            根据关键字取得默认值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:We7.Framework.Cache.CacheConfig.Instance">
            <summary>
            当前对象实例
            </summary>
        </member>
    </members>
</doc>
