//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4952
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.4952 版自动生成。
// 
#pragma warning disable 1591

namespace We7.CMS.Accounts.WD {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using We7.CMS.Common.PF;
    using Thinkment.Data;
    using We7.CMS.Common.Enum;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccountWebServiceSoap", Namespace="http://westengine.com/")]
    public partial class AccountWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback helloOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccontOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountCountByCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAccountCountByQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAccountsByQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthenticatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignAccountRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleBytitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoles1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOfAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsOfRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsOfRole1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountCountOfRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentTreeWithFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentTreeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountWebService() {
            this.Url = global::We7.CMS.Accounts.Properties.Settings.Default.We7_CMS_Accounts_RemoteAccountService_AccountWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event helloCompletedEventHandler helloCompleted;
        
        /// <remarks/>
        public event AddAccountCompletedEventHandler AddAccountCompleted;
        
        /// <remarks/>
        public event ExistEmailCompletedEventHandler ExistEmailCompleted;
        
        /// <remarks/>
        public event ExistUserNameCompletedEventHandler ExistUserNameCompleted;
        
        /// <remarks/>
        public event DeleteAccontCompletedEventHandler DeleteAccontCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        /// <remarks/>
        public event GetAccountByLoginNameCompletedEventHandler GetAccountByLoginNameCompleted;
        
        /// <remarks/>
        public event GetAccountByEmailCompletedEventHandler GetAccountByEmailCompleted;
        
        /// <remarks/>
        public event GetAccountsCompletedEventHandler GetAccountsCompleted;
        
        /// <remarks/>
        public event GetAccountListCompletedEventHandler GetAccountListCompleted;
        
        /// <remarks/>
        public event GetAccountList1CompletedEventHandler GetAccountList1Completed;
        
        /// <remarks/>
        public event GetAccountCountByCriteriaCompletedEventHandler GetAccountCountByCriteriaCompleted;
        
        /// <remarks/>
        public event QueryAccountCountByQueryCompletedEventHandler QueryAccountCountByQueryCompleted;
        
        /// <remarks/>
        public event QueryAccountsByQueryCompletedEventHandler QueryAccountsByQueryCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event SignOutCompletedEventHandler SignOutCompleted;
        
        /// <remarks/>
        public event IsValidPasswordCompletedEventHandler IsValidPasswordCompleted;
        
        /// <remarks/>
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        /// <remarks/>
        public event GetAuthenticatedAccountCompletedEventHandler GetAuthenticatedAccountCompleted;
        
        /// <remarks/>
        public event AddRoleCompletedEventHandler AddRoleCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event UpdateRoleCompletedEventHandler UpdateRoleCompleted;
        
        /// <remarks/>
        public event UpdateAccountRolesCompletedEventHandler UpdateAccountRolesCompleted;
        
        /// <remarks/>
        public event AssignAccountRoleCompletedEventHandler AssignAccountRoleCompleted;
        
        /// <remarks/>
        public event GetRoleCompletedEventHandler GetRoleCompleted;
        
        /// <remarks/>
        public event GetRoleBytitleCompletedEventHandler GetRoleBytitleCompleted;
        
        /// <remarks/>
        public event GetRoleCountCompletedEventHandler GetRoleCountCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event GetRoles1CompletedEventHandler GetRoles1Completed;
        
        /// <remarks/>
        public event DeleteAccountRoleCompletedEventHandler DeleteAccountRoleCompleted;
        
        /// <remarks/>
        public event GetRolesOfAccountCompletedEventHandler GetRolesOfAccountCompleted;
        
        /// <remarks/>
        public event GetAccountsOfRoleCompletedEventHandler GetAccountsOfRoleCompleted;
        
        /// <remarks/>
        public event GetAccountsOfRole1CompletedEventHandler GetAccountsOfRole1Completed;
        
        /// <remarks/>
        public event GetAccountCountOfRoleCompletedEventHandler GetAccountCountOfRoleCompleted;
        
        /// <remarks/>
        public event AddDepartmentCompletedEventHandler AddDepartmentCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentCompletedEventHandler DeleteDepartmentCompleted;
        
        /// <remarks/>
        public event UpdateDepartmentCompletedEventHandler UpdateDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentCompletedEventHandler GetDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentsCompletedEventHandler GetDepartmentsCompleted;
        
        /// <remarks/>
        public event GetOrderDepartmentsCompletedEventHandler GetOrderDepartmentsCompleted;
        
        /// <remarks/>
        public event GetDepartmentTreeWithFormatCompletedEventHandler GetDepartmentTreeWithFormatCompleted;
        
        /// <remarks/>
        public event GetDepartmentTreeCompletedEventHandler GetDepartmentTreeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/hello", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void hello() {
            this.Invoke("hello", new object[0]);
        }
        
        /// <remarks/>
        public void helloAsync() {
            this.helloAsync(null);
        }
        
        /// <remarks/>
        public void helloAsync(object userState) {
            if ((this.helloOperationCompleted == null)) {
                this.helloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhelloOperationCompleted);
            }
            this.InvokeAsync("hello", new object[0], this.helloOperationCompleted, userState);
        }
        
        private void OnhelloOperationCompleted(object arg) {
            if ((this.helloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.helloCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/AddAccount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account AddAccount(Account act) {
            object[] results = this.Invoke("AddAccount", new object[] {
                        act});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccountAsync(Account act) {
            this.AddAccountAsync(act, null);
        }
        
        /// <remarks/>
        public void AddAccountAsync(Account act, object userState) {
            if ((this.AddAccountOperationCompleted == null)) {
                this.AddAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccountOperationCompleted);
            }
            this.InvokeAsync("AddAccount", new object[] {
                        act}, this.AddAccountOperationCompleted, userState);
        }
        
        private void OnAddAccountOperationCompleted(object arg) {
            if ((this.AddAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccountCompleted(this, new AddAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/ExistEmail", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistEmail(string email) {
            object[] results = this.Invoke("ExistEmail", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistEmailAsync(string email) {
            this.ExistEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void ExistEmailAsync(string email, object userState) {
            if ((this.ExistEmailOperationCompleted == null)) {
                this.ExistEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistEmailOperationCompleted);
            }
            this.InvokeAsync("ExistEmail", new object[] {
                        email}, this.ExistEmailOperationCompleted, userState);
        }
        
        private void OnExistEmailOperationCompleted(object arg) {
            if ((this.ExistEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistEmailCompleted(this, new ExistEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/ExistUserName", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistUserName(string userName) {
            object[] results = this.Invoke("ExistUserName", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistUserNameAsync(string userName) {
            this.ExistUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void ExistUserNameAsync(string userName, object userState) {
            if ((this.ExistUserNameOperationCompleted == null)) {
                this.ExistUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistUserNameOperationCompleted);
            }
            this.InvokeAsync("ExistUserName", new object[] {
                        userName}, this.ExistUserNameOperationCompleted, userState);
        }
        
        private void OnExistUserNameOperationCompleted(object arg) {
            if ((this.ExistUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistUserNameCompleted(this, new ExistUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/DeleteAccont", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccont(string accountID) {
            this.Invoke("DeleteAccont", new object[] {
                        accountID});
        }
        
        /// <remarks/>
        public void DeleteAccontAsync(string accountID) {
            this.DeleteAccontAsync(accountID, null);
        }
        
        /// <remarks/>
        public void DeleteAccontAsync(string accountID, object userState) {
            if ((this.DeleteAccontOperationCompleted == null)) {
                this.DeleteAccontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccontOperationCompleted);
            }
            this.InvokeAsync("DeleteAccont", new object[] {
                        accountID}, this.DeleteAccontOperationCompleted, userState);
        }
        
        private void OnDeleteAccontOperationCompleted(object arg) {
            if ((this.DeleteAccontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccontCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/UpdateAccount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccount(Account act, string[] fields) {
            this.Invoke("UpdateAccount", new object[] {
                        act,
                        fields});
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(Account act, string[] fields) {
            this.UpdateAccountAsync(act, fields, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(Account act, string[] fields, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        act,
                        fields}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account GetAccount(string accountID, string[] fields) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        accountID,
                        fields});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAsync(string accountID, string[] fields) {
            this.GetAccountAsync(accountID, fields, null);
        }
        
        /// <remarks/>
        public void GetAccountAsync(string accountID, string[] fields, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        accountID,
                        fields}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountOperationCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountByLoginName", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account GetAccountByLoginName(string loginName) {
            object[] results = this.Invoke("GetAccountByLoginName", new object[] {
                        loginName});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByLoginNameAsync(string loginName) {
            this.GetAccountByLoginNameAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetAccountByLoginNameAsync(string loginName, object userState) {
            if ((this.GetAccountByLoginNameOperationCompleted == null)) {
                this.GetAccountByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetAccountByLoginName", new object[] {
                        loginName}, this.GetAccountByLoginNameOperationCompleted, userState);
        }
        
        private void OnGetAccountByLoginNameOperationCompleted(object arg) {
            if ((this.GetAccountByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByLoginNameCompleted(this, new GetAccountByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountByEmail", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account GetAccountByEmail(string email) {
            object[] results = this.Invoke("GetAccountByEmail", new object[] {
                        email});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByEmailAsync(string email) {
            this.GetAccountByEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void GetAccountByEmailAsync(string email, object userState) {
            if ((this.GetAccountByEmailOperationCompleted == null)) {
                this.GetAccountByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByEmailOperationCompleted);
            }
            this.InvokeAsync("GetAccountByEmail", new object[] {
                        email}, this.GetAccountByEmailOperationCompleted, userState);
        }
        
        private void OnGetAccountByEmailOperationCompleted(object arg) {
            if ((this.GetAccountByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByEmailCompleted(this, new GetAccountByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccounts", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAccounts(string siteID, string departmentID, string selectName, OwnerRank type) {
            object[] results = this.Invoke("GetAccounts", new object[] {
                        siteID,
                        departmentID,
                        selectName,
                        type});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAsync(string siteID, string departmentID, string selectName, OwnerRank type) {
            this.GetAccountsAsync(siteID, departmentID, selectName, type, null);
        }
        
        /// <remarks/>
        public void GetAccountsAsync(string siteID, string departmentID, string selectName, OwnerRank type, object userState) {
            if ((this.GetAccountsOperationCompleted == null)) {
                this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAccounts", new object[] {
                        siteID,
                        departmentID,
                        selectName,
                        type}, this.GetAccountsOperationCompleted, userState);
        }
        
        private void OnGetAccountsOperationCompleted(object arg) {
            if ((this.GetAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountList-1", RequestElementName="GetAccountList-1", RequestNamespace="http://westengine.com/", ResponseElementName="GetAccountList-1Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAccountList-1Result", DataType="base64Binary")]
        public byte[] GetAccountList(string[] ownerIds) {
            object[] results = this.Invoke("GetAccountList", new object[] {
                        ownerIds});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountListAsync(string[] ownerIds) {
            this.GetAccountListAsync(ownerIds, null);
        }
        
        /// <remarks/>
        public void GetAccountListAsync(string[] ownerIds, object userState) {
            if ((this.GetAccountListOperationCompleted == null)) {
                this.GetAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountListOperationCompleted);
            }
            this.InvokeAsync("GetAccountList", new object[] {
                        ownerIds}, this.GetAccountListOperationCompleted, userState);
        }
        
        private void OnGetAccountListOperationCompleted(object arg) {
            if ((this.GetAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountListCompleted(this, new GetAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAccountList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountList-4", RequestElementName="GetAccountList-4", RequestNamespace="http://westengine.com/", ResponseElementName="GetAccountList-4Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAccountList-4Result", DataType="base64Binary")]
        public byte[] GetAccountList(Criteria c, Order[] o, int begin, int count) {
            object[] results = this.Invoke("GetAccountList1", new object[] {
                        c,
                        o,
                        begin,
                        count});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountList1Async(Criteria c, Order[] o, int begin, int count) {
            this.GetAccountList1Async(c, o, begin, count, null);
        }
        
        /// <remarks/>
        public void GetAccountList1Async(Criteria c, Order[] o, int begin, int count, object userState) {
            if ((this.GetAccountList1OperationCompleted == null)) {
                this.GetAccountList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountList1OperationCompleted);
            }
            this.InvokeAsync("GetAccountList1", new object[] {
                        c,
                        o,
                        begin,
                        count}, this.GetAccountList1OperationCompleted, userState);
        }
        
        private void OnGetAccountList1OperationCompleted(object arg) {
            if ((this.GetAccountList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountList1Completed(this, new GetAccountList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountCountByCriteria", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountCountByCriteria(Criteria c) {
            object[] results = this.Invoke("GetAccountCountByCriteria", new object[] {
                        c});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountCountByCriteriaAsync(Criteria c) {
            this.GetAccountCountByCriteriaAsync(c, null);
        }
        
        /// <remarks/>
        public void GetAccountCountByCriteriaAsync(Criteria c, object userState) {
            if ((this.GetAccountCountByCriteriaOperationCompleted == null)) {
                this.GetAccountCountByCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCountByCriteriaOperationCompleted);
            }
            this.InvokeAsync("GetAccountCountByCriteria", new object[] {
                        c}, this.GetAccountCountByCriteriaOperationCompleted, userState);
        }
        
        private void OnGetAccountCountByCriteriaOperationCompleted(object arg) {
            if ((this.GetAccountCountByCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCountByCriteriaCompleted(this, new GetAccountCountByCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/QueryAccountCountByQuery", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryAccountCountByQuery(AccountQuery query) {
            object[] results = this.Invoke("QueryAccountCountByQuery", new object[] {
                        query});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAccountCountByQueryAsync(AccountQuery query) {
            this.QueryAccountCountByQueryAsync(query, null);
        }
        
        /// <remarks/>
        public void QueryAccountCountByQueryAsync(AccountQuery query, object userState) {
            if ((this.QueryAccountCountByQueryOperationCompleted == null)) {
                this.QueryAccountCountByQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAccountCountByQueryOperationCompleted);
            }
            this.InvokeAsync("QueryAccountCountByQuery", new object[] {
                        query}, this.QueryAccountCountByQueryOperationCompleted, userState);
        }
        
        private void OnQueryAccountCountByQueryOperationCompleted(object arg) {
            if ((this.QueryAccountCountByQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAccountCountByQueryCompleted(this, new QueryAccountCountByQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/QueryAccountsByQuery", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryAccountsByQuery(AccountQuery query, int from, int count, string[] fields) {
            object[] results = this.Invoke("QueryAccountsByQuery", new object[] {
                        query,
                        from,
                        count,
                        fields});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAccountsByQueryAsync(AccountQuery query, int from, int count, string[] fields) {
            this.QueryAccountsByQueryAsync(query, from, count, fields, null);
        }
        
        /// <remarks/>
        public void QueryAccountsByQueryAsync(AccountQuery query, int from, int count, string[] fields, object userState) {
            if ((this.QueryAccountsByQueryOperationCompleted == null)) {
                this.QueryAccountsByQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAccountsByQueryOperationCompleted);
            }
            this.InvokeAsync("QueryAccountsByQuery", new object[] {
                        query,
                        from,
                        count,
                        fields}, this.QueryAccountsByQueryOperationCompleted, userState);
        }
        
        private void OnQueryAccountsByQueryOperationCompleted(object arg) {
            if ((this.QueryAccountsByQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAccountsByQueryCompleted(this, new QueryAccountsByQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/Login", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Login(string name, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        name,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password) {
            this.LoginAsync(name, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        name,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/SignOut", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SignOut() {
            object[] results = this.Invoke("SignOut", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SignOutAsync() {
            this.SignOutAsync(null);
        }
        
        /// <remarks/>
        public void SignOutAsync(object userState) {
            if ((this.SignOutOperationCompleted == null)) {
                this.SignOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignOutOperationCompleted);
            }
            this.InvokeAsync("SignOut", new object[0], this.SignOutOperationCompleted, userState);
        }
        
        private void OnSignOutOperationCompleted(object arg) {
            if ((this.SignOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignOutCompleted(this, new SignOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/IsValidPassword", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidPassword(Account account, string password) {
            object[] results = this.Invoke("IsValidPassword", new object[] {
                        account,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidPasswordAsync(Account account, string password) {
            this.IsValidPasswordAsync(account, password, null);
        }
        
        /// <remarks/>
        public void IsValidPasswordAsync(Account account, string password, object userState) {
            if ((this.IsValidPasswordOperationCompleted == null)) {
                this.IsValidPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidPasswordOperationCompleted);
            }
            this.InvokeAsync("IsValidPassword", new object[] {
                        account,
                        password}, this.IsValidPasswordOperationCompleted, userState);
        }
        
        private void OnIsValidPasswordOperationCompleted(object arg) {
            if ((this.IsValidPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidPasswordCompleted(this, new IsValidPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/UpdatePassword", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePassword(Account account, string newPassword) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        account,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(Account account, string newPassword) {
            this.UpdatePasswordAsync(account, newPassword, null);
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(Account account, string newPassword, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        account,
                        newPassword}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordOperationCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAuthenticatedAccount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account GetAuthenticatedAccount() {
            object[] results = this.Invoke("GetAuthenticatedAccount", new object[0]);
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthenticatedAccountAsync() {
            this.GetAuthenticatedAccountAsync(null);
        }
        
        /// <remarks/>
        public void GetAuthenticatedAccountAsync(object userState) {
            if ((this.GetAuthenticatedAccountOperationCompleted == null)) {
                this.GetAuthenticatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthenticatedAccountOperationCompleted);
            }
            this.InvokeAsync("GetAuthenticatedAccount", new object[0], this.GetAuthenticatedAccountOperationCompleted, userState);
        }
        
        private void OnGetAuthenticatedAccountOperationCompleted(object arg) {
            if ((this.GetAuthenticatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthenticatedAccountCompleted(this, new GetAuthenticatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/AddRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role AddRole(Role role) {
            object[] results = this.Invoke("AddRole", new object[] {
                        role});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void AddRoleAsync(Role role) {
            this.AddRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void AddRoleAsync(Role role, object userState) {
            if ((this.AddRoleOperationCompleted == null)) {
                this.AddRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRoleOperationCompleted);
            }
            this.InvokeAsync("AddRole", new object[] {
                        role}, this.AddRoleOperationCompleted, userState);
        }
        
        private void OnAddRoleOperationCompleted(object arg) {
            if ((this.AddRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRoleCompleted(this, new AddRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/DeleteRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string roleID) {
            this.Invoke("DeleteRole", new object[] {
                        roleID});
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string roleID) {
            this.DeleteRoleAsync(roleID, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string roleID, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        roleID}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/UpdateRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRole(Role role) {
            this.Invoke("UpdateRole", new object[] {
                        role});
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(Role role) {
            this.UpdateRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(Role role, object userState) {
            if ((this.UpdateRoleOperationCompleted == null)) {
                this.UpdateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateRole", new object[] {
                        role}, this.UpdateRoleOperationCompleted, userState);
        }
        
        private void OnUpdateRoleOperationCompleted(object arg) {
            if ((this.UpdateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/UpdateAccountRoles", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccountRoles(string accountID, string[] roles) {
            this.Invoke("UpdateAccountRoles", new object[] {
                        accountID,
                        roles});
        }
        
        /// <remarks/>
        public void UpdateAccountRolesAsync(string accountID, string[] roles) {
            this.UpdateAccountRolesAsync(accountID, roles, null);
        }
        
        /// <remarks/>
        public void UpdateAccountRolesAsync(string accountID, string[] roles, object userState) {
            if ((this.UpdateAccountRolesOperationCompleted == null)) {
                this.UpdateAccountRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountRolesOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountRoles", new object[] {
                        accountID,
                        roles}, this.UpdateAccountRolesOperationCompleted, userState);
        }
        
        private void OnUpdateAccountRolesOperationCompleted(object arg) {
            if ((this.UpdateAccountRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountRolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/AssignAccountRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignAccountRole(string accountID, string roleID) {
            object[] results = this.Invoke("AssignAccountRole", new object[] {
                        accountID,
                        roleID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAccountRoleAsync(string accountID, string roleID) {
            this.AssignAccountRoleAsync(accountID, roleID, null);
        }
        
        /// <remarks/>
        public void AssignAccountRoleAsync(string accountID, string roleID, object userState) {
            if ((this.AssignAccountRoleOperationCompleted == null)) {
                this.AssignAccountRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignAccountRoleOperationCompleted);
            }
            this.InvokeAsync("AssignAccountRole", new object[] {
                        accountID,
                        roleID}, this.AssignAccountRoleOperationCompleted, userState);
        }
        
        private void OnAssignAccountRoleOperationCompleted(object arg) {
            if ((this.AssignAccountRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignAccountRoleCompleted(this, new AssignAccountRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role GetRole(string roleID) {
            object[] results = this.Invoke("GetRole", new object[] {
                        roleID});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleAsync(string roleID) {
            this.GetRoleAsync(roleID, null);
        }
        
        /// <remarks/>
        public void GetRoleAsync(string roleID, object userState) {
            if ((this.GetRoleOperationCompleted == null)) {
                this.GetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleOperationCompleted);
            }
            this.InvokeAsync("GetRole", new object[] {
                        roleID}, this.GetRoleOperationCompleted, userState);
        }
        
        private void OnGetRoleOperationCompleted(object arg) {
            if ((this.GetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRoleBytitle", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role GetRoleBytitle(string title) {
            object[] results = this.Invoke("GetRoleBytitle", new object[] {
                        title});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleBytitleAsync(string title) {
            this.GetRoleBytitleAsync(title, null);
        }
        
        /// <remarks/>
        public void GetRoleBytitleAsync(string title, object userState) {
            if ((this.GetRoleBytitleOperationCompleted == null)) {
                this.GetRoleBytitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleBytitleOperationCompleted);
            }
            this.InvokeAsync("GetRoleBytitle", new object[] {
                        title}, this.GetRoleBytitleOperationCompleted, userState);
        }
        
        private void OnGetRoleBytitleOperationCompleted(object arg) {
            if ((this.GetRoleBytitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleBytitleCompleted(this, new GetRoleBytitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRoleCount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRoleCount(string siteID, OwnerRank type) {
            object[] results = this.Invoke("GetRoleCount", new object[] {
                        siteID,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleCountAsync(string siteID, OwnerRank type) {
            this.GetRoleCountAsync(siteID, type, null);
        }
        
        /// <remarks/>
        public void GetRoleCountAsync(string siteID, OwnerRank type, object userState) {
            if ((this.GetRoleCountOperationCompleted == null)) {
                this.GetRoleCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleCountOperationCompleted);
            }
            this.InvokeAsync("GetRoleCount", new object[] {
                        siteID,
                        type}, this.GetRoleCountOperationCompleted, userState);
        }
        
        private void OnGetRoleCountOperationCompleted(object arg) {
            if ((this.GetRoleCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCountCompleted(this, new GetRoleCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRoles-2", RequestElementName="GetRoles-2", RequestNamespace="http://westengine.com/", ResponseElementName="GetRoles-2Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRoles-2Result", DataType="base64Binary")]
        public byte[] GetRoles(string siteID, int from, int count) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        siteID,
                        from,
                        count});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(string siteID, int from, int count) {
            this.GetRolesAsync(siteID, from, count, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(string siteID, int from, int count, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        siteID,
                        from,
                        count}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetRoles1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRoles-2-2", RequestElementName="GetRoles-2-2", RequestNamespace="http://westengine.com/", ResponseElementName="GetRoles-2-2Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRoles-2-2Result", DataType="base64Binary")]
        public byte[] GetRoles(string siteID, OwnerRank type, string key) {
            object[] results = this.Invoke("GetRoles1", new object[] {
                        siteID,
                        type,
                        key});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRoles1Async(string siteID, OwnerRank type, string key) {
            this.GetRoles1Async(siteID, type, key, null);
        }
        
        /// <remarks/>
        public void GetRoles1Async(string siteID, OwnerRank type, string key, object userState) {
            if ((this.GetRoles1OperationCompleted == null)) {
                this.GetRoles1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoles1OperationCompleted);
            }
            this.InvokeAsync("GetRoles1", new object[] {
                        siteID,
                        type,
                        key}, this.GetRoles1OperationCompleted, userState);
        }
        
        private void OnGetRoles1OperationCompleted(object arg) {
            if ((this.GetRoles1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoles1Completed(this, new GetRoles1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/DeleteAccountRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountRole(string id) {
            this.Invoke("DeleteAccountRole", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountRoleAsync(string id) {
            this.DeleteAccountRoleAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountRoleAsync(string id, object userState) {
            if ((this.DeleteAccountRoleOperationCompleted == null)) {
                this.DeleteAccountRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountRole", new object[] {
                        id}, this.DeleteAccountRoleOperationCompleted, userState);
        }
        
        private void OnDeleteAccountRoleOperationCompleted(object arg) {
            if ((this.DeleteAccountRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetRolesOfAccount", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRolesOfAccount(string accountID) {
            object[] results = this.Invoke("GetRolesOfAccount", new object[] {
                        accountID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesOfAccountAsync(string accountID) {
            this.GetRolesOfAccountAsync(accountID, null);
        }
        
        /// <remarks/>
        public void GetRolesOfAccountAsync(string accountID, object userState) {
            if ((this.GetRolesOfAccountOperationCompleted == null)) {
                this.GetRolesOfAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOfAccountOperationCompleted);
            }
            this.InvokeAsync("GetRolesOfAccount", new object[] {
                        accountID}, this.GetRolesOfAccountOperationCompleted, userState);
        }
        
        private void OnGetRolesOfAccountOperationCompleted(object arg) {
            if ((this.GetRolesOfAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesOfAccountCompleted(this, new GetRolesOfAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountsOfRole-1", RequestElementName="GetAccountsOfRole-1", RequestNamespace="http://westengine.com/", ResponseElementName="GetAccountsOfRole-1Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAccountsOfRole-1Result", DataType="base64Binary")]
        public byte[] GetAccountsOfRole(string roleID) {
            object[] results = this.Invoke("GetAccountsOfRole", new object[] {
                        roleID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsOfRoleAsync(string roleID) {
            this.GetAccountsOfRoleAsync(roleID, null);
        }
        
        /// <remarks/>
        public void GetAccountsOfRoleAsync(string roleID, object userState) {
            if ((this.GetAccountsOfRoleOperationCompleted == null)) {
                this.GetAccountsOfRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOfRoleOperationCompleted);
            }
            this.InvokeAsync("GetAccountsOfRole", new object[] {
                        roleID}, this.GetAccountsOfRoleOperationCompleted, userState);
        }
        
        private void OnGetAccountsOfRoleOperationCompleted(object arg) {
            if ((this.GetAccountsOfRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsOfRoleCompleted(this, new GetAccountsOfRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetAccountsOfRole1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountsOfRole-3", RequestElementName="GetAccountsOfRole-3", RequestNamespace="http://westengine.com/", ResponseElementName="GetAccountsOfRole-3Response", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAccountsOfRole-3Result", DataType="base64Binary")]
        public byte[] GetAccountsOfRole(string roleID, int from, int count) {
            object[] results = this.Invoke("GetAccountsOfRole1", new object[] {
                        roleID,
                        from,
                        count});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsOfRole1Async(string roleID, int from, int count) {
            this.GetAccountsOfRole1Async(roleID, from, count, null);
        }
        
        /// <remarks/>
        public void GetAccountsOfRole1Async(string roleID, int from, int count, object userState) {
            if ((this.GetAccountsOfRole1OperationCompleted == null)) {
                this.GetAccountsOfRole1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOfRole1OperationCompleted);
            }
            this.InvokeAsync("GetAccountsOfRole1", new object[] {
                        roleID,
                        from,
                        count}, this.GetAccountsOfRole1OperationCompleted, userState);
        }
        
        private void OnGetAccountsOfRole1OperationCompleted(object arg) {
            if ((this.GetAccountsOfRole1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsOfRole1Completed(this, new GetAccountsOfRole1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetAccountCountOfRole", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountCountOfRole(string roleID) {
            object[] results = this.Invoke("GetAccountCountOfRole", new object[] {
                        roleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountCountOfRoleAsync(string roleID) {
            this.GetAccountCountOfRoleAsync(roleID, null);
        }
        
        /// <remarks/>
        public void GetAccountCountOfRoleAsync(string roleID, object userState) {
            if ((this.GetAccountCountOfRoleOperationCompleted == null)) {
                this.GetAccountCountOfRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCountOfRoleOperationCompleted);
            }
            this.InvokeAsync("GetAccountCountOfRole", new object[] {
                        roleID}, this.GetAccountCountOfRoleOperationCompleted, userState);
        }
        
        private void OnGetAccountCountOfRoleOperationCompleted(object arg) {
            if ((this.GetAccountCountOfRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCountOfRoleCompleted(this, new GetAccountCountOfRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/AddDepartment", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department AddDepartment(Department dpt) {
            object[] results = this.Invoke("AddDepartment", new object[] {
                        dpt});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void AddDepartmentAsync(Department dpt) {
            this.AddDepartmentAsync(dpt, null);
        }
        
        /// <remarks/>
        public void AddDepartmentAsync(Department dpt, object userState) {
            if ((this.AddDepartmentOperationCompleted == null)) {
                this.AddDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDepartmentOperationCompleted);
            }
            this.InvokeAsync("AddDepartment", new object[] {
                        dpt}, this.AddDepartmentOperationCompleted, userState);
        }
        
        private void OnAddDepartmentOperationCompleted(object arg) {
            if ((this.AddDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDepartmentCompleted(this, new AddDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/DeleteDepartment", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartment(string departmentID) {
            this.Invoke("DeleteDepartment", new object[] {
                        departmentID});
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string departmentID) {
            this.DeleteDepartmentAsync(departmentID, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string departmentID, object userState) {
            if ((this.DeleteDepartmentOperationCompleted == null)) {
                this.DeleteDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartment", new object[] {
                        departmentID}, this.DeleteDepartmentOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentOperationCompleted(object arg) {
            if ((this.DeleteDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/UpdateDepartment", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDepartment(Department dpt, string[] fields) {
            this.Invoke("UpdateDepartment", new object[] {
                        dpt,
                        fields});
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(Department dpt, string[] fields) {
            this.UpdateDepartmentAsync(dpt, fields, null);
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(Department dpt, string[] fields, object userState) {
            if ((this.UpdateDepartmentOperationCompleted == null)) {
                this.UpdateDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentOperationCompleted);
            }
            this.InvokeAsync("UpdateDepartment", new object[] {
                        dpt,
                        fields}, this.UpdateDepartmentOperationCompleted, userState);
        }
        
        private void OnUpdateDepartmentOperationCompleted(object arg) {
            if ((this.UpdateDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepartmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetDepartment", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department GetDepartment(string departmentID, string[] fields) {
            object[] results = this.Invoke("GetDepartment", new object[] {
                        departmentID,
                        fields});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string departmentID, string[] fields) {
            this.GetDepartmentAsync(departmentID, fields, null);
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string departmentID, string[] fields, object userState) {
            if ((this.GetDepartmentOperationCompleted == null)) {
                this.GetDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDepartment", new object[] {
                        departmentID,
                        fields}, this.GetDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDepartmentOperationCompleted(object arg) {
            if ((this.GetDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCompleted(this, new GetDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetDepartments", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDepartments(string siteID, string parentID, string selectName, string[] fields) {
            object[] results = this.Invoke("GetDepartments", new object[] {
                        siteID,
                        parentID,
                        selectName,
                        fields});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentsAsync(string siteID, string parentID, string selectName, string[] fields) {
            this.GetDepartmentsAsync(siteID, parentID, selectName, fields, null);
        }
        
        /// <remarks/>
        public void GetDepartmentsAsync(string siteID, string parentID, string selectName, string[] fields, object userState) {
            if ((this.GetDepartmentsOperationCompleted == null)) {
                this.GetDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentsOperationCompleted);
            }
            this.InvokeAsync("GetDepartments", new object[] {
                        siteID,
                        parentID,
                        selectName,
                        fields}, this.GetDepartmentsOperationCompleted, userState);
        }
        
        private void OnGetDepartmentsOperationCompleted(object arg) {
            if ((this.GetDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentsCompleted(this, new GetDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetOrderDepartments", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOrderDepartments(string siteID, string parentID) {
            object[] results = this.Invoke("GetOrderDepartments", new object[] {
                        siteID,
                        parentID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDepartmentsAsync(string siteID, string parentID) {
            this.GetOrderDepartmentsAsync(siteID, parentID, null);
        }
        
        /// <remarks/>
        public void GetOrderDepartmentsAsync(string siteID, string parentID, object userState) {
            if ((this.GetOrderDepartmentsOperationCompleted == null)) {
                this.GetOrderDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDepartmentsOperationCompleted);
            }
            this.InvokeAsync("GetOrderDepartments", new object[] {
                        siteID,
                        parentID}, this.GetOrderDepartmentsOperationCompleted, userState);
        }
        
        private void OnGetOrderDepartmentsOperationCompleted(object arg) {
            if ((this.GetOrderDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDepartmentsCompleted(this, new GetOrderDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetDepartmentTreeWithFormat", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDepartmentTreeWithFormat(string siteID, string parentId) {
            object[] results = this.Invoke("GetDepartmentTreeWithFormat", new object[] {
                        siteID,
                        parentId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentTreeWithFormatAsync(string siteID, string parentId) {
            this.GetDepartmentTreeWithFormatAsync(siteID, parentId, null);
        }
        
        /// <remarks/>
        public void GetDepartmentTreeWithFormatAsync(string siteID, string parentId, object userState) {
            if ((this.GetDepartmentTreeWithFormatOperationCompleted == null)) {
                this.GetDepartmentTreeWithFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentTreeWithFormatOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentTreeWithFormat", new object[] {
                        siteID,
                        parentId}, this.GetDepartmentTreeWithFormatOperationCompleted, userState);
        }
        
        private void OnGetDepartmentTreeWithFormatOperationCompleted(object arg) {
            if ((this.GetDepartmentTreeWithFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentTreeWithFormatCompleted(this, new GetDepartmentTreeWithFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://westengine.com/GetDepartmentTree", RequestNamespace="http://westengine.com/", ResponseNamespace="http://westengine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDepartmentTree(string siteID, string parentId) {
            object[] results = this.Invoke("GetDepartmentTree", new object[] {
                        siteID,
                        parentId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentTreeAsync(string siteID, string parentId) {
            this.GetDepartmentTreeAsync(siteID, parentId, null);
        }
        
        /// <remarks/>
        public void GetDepartmentTreeAsync(string siteID, string parentId, object userState) {
            if ((this.GetDepartmentTreeOperationCompleted == null)) {
                this.GetDepartmentTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentTreeOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentTree", new object[] {
                        siteID,
                        parentId}, this.GetDepartmentTreeOperationCompleted, userState);
        }
        
        private void OnGetDepartmentTreeOperationCompleted(object arg) {
            if ((this.GetDepartmentTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentTreeCompleted(this, new GetDepartmentTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
  
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void helloCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddAccountCompletedEventHandler(object sender, AddAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExistEmailCompletedEventHandler(object sender, ExistEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExistUserNameCompletedEventHandler(object sender, ExistUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccontCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountByLoginNameCompletedEventHandler(object sender, GetAccountByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountByEmailCompletedEventHandler(object sender, GetAccountByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountListCompletedEventHandler(object sender, GetAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountList1CompletedEventHandler(object sender, GetAccountList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountCountByCriteriaCompletedEventHandler(object sender, GetAccountCountByCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCountByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCountByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void QueryAccountCountByQueryCompletedEventHandler(object sender, QueryAccountCountByQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAccountCountByQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAccountCountByQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void QueryAccountsByQueryCompletedEventHandler(object sender, QueryAccountsByQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAccountsByQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAccountsByQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SignOutCompletedEventHandler(object sender, SignOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IsValidPasswordCompletedEventHandler(object sender, IsValidPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAuthenticatedAccountCompletedEventHandler(object sender, GetAuthenticatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthenticatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthenticatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddRoleCompletedEventHandler(object sender, AddRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateAccountRolesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AssignAccountRoleCompletedEventHandler(object sender, AssignAccountRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignAccountRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignAccountRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRoleCompletedEventHandler(object sender, GetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRoleBytitleCompletedEventHandler(object sender, GetRoleBytitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleBytitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleBytitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRoleCountCompletedEventHandler(object sender, GetRoleCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRoles1CompletedEventHandler(object sender, GetRoles1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoles1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoles1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRolesOfAccountCompletedEventHandler(object sender, GetRolesOfAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesOfAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesOfAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountsOfRoleCompletedEventHandler(object sender, GetAccountsOfRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsOfRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsOfRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountsOfRole1CompletedEventHandler(object sender, GetAccountsOfRole1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsOfRole1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsOfRole1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountCountOfRoleCompletedEventHandler(object sender, GetAccountCountOfRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCountOfRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCountOfRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddDepartmentCompletedEventHandler(object sender, AddDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteDepartmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateDepartmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDepartmentCompletedEventHandler(object sender, GetDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDepartmentsCompletedEventHandler(object sender, GetDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetOrderDepartmentsCompletedEventHandler(object sender, GetOrderDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDepartmentTreeWithFormatCompletedEventHandler(object sender, GetDepartmentTreeWithFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentTreeWithFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentTreeWithFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDepartmentTreeCompletedEventHandler(object sender, GetDepartmentTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591